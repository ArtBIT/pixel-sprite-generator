!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=9)}([function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(34),o=n(35),a=r.engines.mt19937().autoSeed(),i=(t.randomInt=function(e,t){return r.integer(e,t)(a)},t.setSeed=function(e){a.seed(o(String(e)))},t.isMinusZero=function(e){return 0===e&&1/e==-1/0});t.isNegative=function(e){return e<0||i(e)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var s in n=Object(arguments[u]))o.call(n,s)&&(l[s]=n[s]);if(r){i=r(n);for(var c=0;c<i.length;c++)a.call(n,i[c])&&(l[i[c]]=n[i[c]])}}return l}},function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,a,i,l,u){if(r(t),!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,o,a,i,l,u],f=0;(s=new Error(t.replace(/%s/g,function(){return c[f++]}))).name="Invariant Violation"}throw s.framesToPop=1,s}}},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){e.exports=n(30)()},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=n(38),a=n(8).templates,i=n(45),l=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pixelData=new i(t.width||1,t.height||1,t.data),this.recipes=n||[]}return r(e,[{key:"run",value:function(){var e=this.pixelData.clone();return this.recipes.forEach(function(t){e.transform(function(e){return function(){return o[t.name].call(this,e)}}(t.options))}),e}}]),e}();l.templates=a,e.exports=l},function(e,t,n){"use strict";var r=new(n(43));e.exports={templates:r.templates,saveTemplate:function(e,t){return r.add(e,t)},deleteTemplate:function(e){return r.remove(e)}}},function(e,t,n){"use strict";var r=i(n(0)),o=i(n(11));n(19);var a=i(n(24));function i(e){return e&&e.__esModule?e:{default:e}}o.default.render(r.default.createElement(a.default,null),document.querySelector("#root"))},function(e,t,n){"use strict";
/** @license React v16.4.2
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(2),o=n(3),a=n(4),i=n(5),l="function"==typeof Symbol&&Symbol.for,u=l?Symbol.for("react.element"):60103,s=l?Symbol.for("react.portal"):60106,c=l?Symbol.for("react.fragment"):60107,f=l?Symbol.for("react.strict_mode"):60108,d=l?Symbol.for("react.profiler"):60114,p=l?Symbol.for("react.provider"):60109,h=l?Symbol.for("react.context"):60110,m=l?Symbol.for("react.async_mode"):60111,v=l?Symbol.for("react.forward_ref"):60112;l&&Symbol.for("react.timeout");var g="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);o(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function w(e,t,n){this.props=e,this.context=t,this.refs=a,this.updater=n||b}function x(){}function E(e,t,n){this.props=e,this.context=t,this.refs=a,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&y("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=w.prototype;var k=E.prototype=new x;k.constructor=E,r(k,w.prototype),k.isPureReactComponent=!0;var C={current:null},_=Object.prototype.hasOwnProperty,T={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r=void 0,o={},a=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(a=""+t.key),t)_.call(t,r)&&!T.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var s=Array(l),c=0;c<l;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:u,type:e,key:a,ref:i,props:o,_owner:C.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===u}var O=/\/+/g,N=[];function M(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function j(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case u:case s:a=!0}}if(a)return n(r,e,""===t?"."+L(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var i=0;i<e.length;i++){var l=t+L(o=e[i],i);a+=j(o,l,n,r)}else if(null===e||void 0===e?l=null:l="function"==typeof(l=g&&e[g]||e["@@iterator"])?l:null,"function"==typeof l)for(e=l.call(e),i=0;!(o=e.next()).done;)a+=j(o=o.value,l=t+L(o,i++),n,r);else"object"===o&&y("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return a}function L(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function U(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,i.thatReturnsArgument):null!=e&&(P(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n,e={$$typeof:u,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function F(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(O,"$&/")+"/"),t=M(t,a,r,o),null==e||j(e,"",I,t),R(t)}var D={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=M(null,null,t,n),null==e||j(e,"",U,t),R(t)},count:function(e){return null==e?0:j(e,"",i.thatReturnsNull,null)},toArray:function(e){var t=[];return F(e,t,null,i.thatReturnsArgument),t},only:function(e){return P(e)||y("143"),e}},createRef:function(){return{current:null}},Component:w,PureComponent:E,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:h,_calculateChangedBits:t,_defaultValue:e,_currentValue:e,_currentValue2:e,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null}).Provider={$$typeof:p,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:v,render:e}},Fragment:c,StrictMode:f,unstable_AsyncMode:m,unstable_Profiler:d,createElement:S,cloneElement:function(e,t,n){(null===e||void 0===e)&&y("267",e);var o=void 0,a=r({},e.props),i=e.key,l=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,s=C.current),void 0!==t.key&&(i=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)_.call(t,o)&&!T.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){c=Array(o);for(var f=0;f<o;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:u,type:e.type,key:i,ref:l,props:a,_owner:s}},createFactory:function(e){var t=S.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.4.2",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:r}},z={default:D},A=z&&D||z;e.exports=A.default?A.default:A},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(12)},function(e,t,n){"use strict";
/** @license React v16.4.2
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(3),o=n(0),a=n(13),i=n(2),l=n(5),u=n(14),s=n(15),c=n(16),f=n(4);function d(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=0;o<t;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);r(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}o||d("227");var p={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(e,t,n,r,o,a,i,l,u){(function(e,t,n,r,o,a,i,l,u){this._hasCaughtError=!1,this._caughtError=null;var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this._caughtError=e,this._hasCaughtError=!0}}).apply(p,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,a,i,l,u){if(p.invokeGuardedCallback.apply(this,arguments),p.hasCaughtError()){var s=p.clearCaughtError();p._hasRethrowError||(p._hasRethrowError=!0,p._rethrowError=s)}},rethrowCaughtError:function(){return function(){if(p._hasRethrowError){var e=p._rethrowError;throw p._rethrowError=null,p._hasRethrowError=!1,e}}.apply(p,arguments)},hasCaughtError:function(){return p._hasCaughtError},clearCaughtError:function(){if(p._hasCaughtError){var e=p._caughtError;return p._caughtError=null,p._hasCaughtError=!1,e}d("198")}};var h=null,m={};function v(){if(h)for(var e in m){var t=m[e],n=h.indexOf(e);if(-1<n||d("96",e),!y[n])for(var r in t.extractEvents||d("97",e),y[n]=t,n=t.eventTypes){var o=void 0,a=n[r],i=t,l=r;b.hasOwnProperty(l)&&d("99",l),b[l]=a;var u=a.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&g(u[o],i,l);o=!0}else a.registrationName?(g(a.registrationName,i,l),o=!0):o=!1;o||d("98",r,e)}}}function g(e,t,n){w[e]&&d("100",e),w[e]=t,x[e]=t.eventTypes[n].dependencies}var y=[],b={},w={},x={};function E(e){h&&d("101"),h=Array.prototype.slice.call(e),v()}function k(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&d("102",t),m[t]=r,n=!0)}n&&v()}var C={plugins:y,eventNameDispatchConfigs:b,registrationNameModules:w,registrationNameDependencies:x,possibleRegistrationNames:null,injectEventPluginOrder:E,injectEventPluginsByName:k},_=null,T=null,S=null;function P(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=S(r),p.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function O(e,t){return null==t&&d("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function N(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var M=null;function R(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)P(e,t,n[o],r[o]);else n&&P(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function j(e){return R(e,!0)}function L(e){return R(e,!1)}var U={injectEventPluginOrder:E,injectEventPluginsByName:k};function I(e,t){var n=e.stateNode;if(!n)return null;var r=_(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&d("231",t,typeof n),n)}function F(e,t){null!==e&&(M=O(M,e)),e=M,M=null,e&&(N(e,t?j:L),M&&d("95"),p.rethrowCaughtError())}function D(e,t,n,r){for(var o=null,a=0;a<y.length;a++){var i=y[a];i&&(i=i.extractEvents(e,t,n,r))&&(o=O(o,i))}F(o,!1)}var z={injection:U,getListener:I,runEventsInBatch:F,runExtractedEventsInBatch:D},A=Math.random().toString(36).slice(2),B="__reactInternalInstance$"+A,V="__reactEventHandlers$"+A;function W(e){if(e[B])return e[B];for(;!e[B];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[B]).tag||6===e.tag?e:null}function H(e){if(5===e.tag||6===e.tag)return e.stateNode;d("33")}function $(e){return e[V]||null}var Y={precacheFiberNode:function(e,t){t[B]=e},getClosestInstanceFromNode:W,getInstanceFromNode:function(e){return!(e=e[B])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:H,getFiberCurrentPropsFromNode:$,updateFiberProps:function(e,t){e[V]=t}};function X(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function q(e,t,n){for(var r=[];e;)r.push(e),e=X(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function Q(e,t,n){(t=I(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function K(e){e&&e.dispatchConfig.phasedRegistrationNames&&q(e._targetInst,Q,e)}function G(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;q(t=t?X(t):null,Q,e)}}function Z(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=I(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function J(e){e&&e.dispatchConfig.registrationName&&Z(e._targetInst,null,e)}function ee(e){N(e,K)}function te(e,t,n,r){if(n&&r)e:{for(var o=n,a=r,i=0,l=o;l;l=X(l))i++;l=0;for(var u=a;u;u=X(u))l++;for(;0<i-l;)o=X(o),i--;for(;0<l-i;)a=X(a),l--;for(;i--;){if(o===a||o===a.alternate)break e;o=X(o),a=X(a)}o=null}else o=null;for(a=o,o=[];n&&n!==a&&(null===(i=n.alternate)||i!==a);)o.push(n),n=X(n);for(n=[];r&&r!==a&&(null===(i=r.alternate)||i!==a);)n.push(r),r=X(r);for(r=0;r<o.length;r++)Z(o[r],"bubbled",e);for(e=n.length;0<e--;)Z(n[e],"captured",t)}var ne={accumulateTwoPhaseDispatches:ee,accumulateTwoPhaseDispatchesSkipTarget:function(e){N(e,G)},accumulateEnterLeaveDispatches:te,accumulateDirectDispatches:function(e){N(e,J)}};function re(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var oe={animationend:re("Animation","AnimationEnd"),animationiteration:re("Animation","AnimationIteration"),animationstart:re("Animation","AnimationStart"),transitionend:re("Transition","TransitionEnd")},ae={},ie={};function le(e){if(ae[e])return ae[e];if(!oe[e])return e;var t,n=oe[e];for(t in n)if(n.hasOwnProperty(t)&&t in ie)return ae[e]=n[t];return e}a.canUseDOM&&(ie=document.createElement("div").style,"AnimationEvent"in window||(delete oe.animationend.animation,delete oe.animationiteration.animation,delete oe.animationstart.animation),"TransitionEvent"in window||delete oe.transitionend.transition);var ue=le("animationend"),se=le("animationiteration"),ce=le("animationstart"),fe=le("transitionend"),de="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),pe=null;function he(){return!pe&&a.canUseDOM&&(pe="textContent"in document.documentElement?"textContent":"innerText"),pe}var me={_root:null,_startText:null,_fallbackText:null};function ve(){if(me._fallbackText)return me._fallbackText;var e,t,n=me._startText,r=n.length,o=ge(),a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return me._fallbackText=o.slice(e,1<t?1-t:void 0),me._fallbackText}function ge(){return"value"in me._root?me._root.value:me._root[he()]}var ye="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),be={type:null,target:null,currentTarget:l.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function we(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?l.thatReturnsTrue:l.thatReturnsFalse,this.isPropagationStopped=l.thatReturnsFalse,this}function xe(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Ee(e){e instanceof this||d("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function ke(e){e.eventPool=[],e.getPooled=xe,e.release=Ee}i(we.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=l.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=l.thatReturnsTrue)},persist:function(){this.isPersistent=l.thatReturnsTrue},isPersistent:l.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<ye.length;t++)this[ye[t]]=null}}),we.Interface=be,we.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,ke(n),n},ke(we);var Ce=we.extend({data:null}),_e=we.extend({data:null}),Te=[9,13,27,32],Se=a.canUseDOM&&"CompositionEvent"in window,Pe=null;a.canUseDOM&&"documentMode"in document&&(Pe=document.documentMode);var Oe=a.canUseDOM&&"TextEvent"in window&&!Pe,Ne=a.canUseDOM&&(!Se||Pe&&8<Pe&&11>=Pe),Me=String.fromCharCode(32),Re={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},je=!1;function Le(e,t){switch(e){case"keyup":return-1!==Te.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ue(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ie=!1;var Fe={eventTypes:Re,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(Se)e:{switch(e){case"compositionstart":o=Re.compositionStart;break e;case"compositionend":o=Re.compositionEnd;break e;case"compositionupdate":o=Re.compositionUpdate;break e}o=void 0}else Ie?Le(e,n)&&(o=Re.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=Re.compositionStart);return o?(Ne&&(Ie||o!==Re.compositionStart?o===Re.compositionEnd&&Ie&&(a=ve()):(me._root=r,me._startText=ge(),Ie=!0)),o=Ce.getPooled(o,t,n,r),a?o.data=a:null!==(a=Ue(n))&&(o.data=a),ee(o),a=o):a=null,(e=Oe?function(e,t){switch(e){case"compositionend":return Ue(t);case"keypress":return 32!==t.which?null:(je=!0,Me);case"textInput":return(e=t.data)===Me&&je?null:e;default:return null}}(e,n):function(e,t){if(Ie)return"compositionend"===e||!Se&&Le(e,t)?(e=ve(),me._root=null,me._startText=null,me._fallbackText=null,Ie=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ne?null:t.data;default:return null}}(e,n))?((t=_e.getPooled(Re.beforeInput,t,n,r)).data=e,ee(t)):t=null,null===a?t:null===t?a:[a,t]}},De=null,ze={injectFiberControlledHostComponent:function(e){De=e}},Ae=null,Be=null;function Ve(e){if(e=T(e)){De&&"function"==typeof De.restoreControlledState||d("194");var t=_(e.stateNode);De.restoreControlledState(e.stateNode,e.type,t)}}function We(e){Ae?Be?Be.push(e):Be=[e]:Ae=e}function He(){return null!==Ae||null!==Be}function $e(){if(Ae){var e=Ae,t=Be;if(Be=Ae=null,Ve(e),t)for(e=0;e<t.length;e++)Ve(t[e])}}var Ye={injection:ze,enqueueStateRestore:We,needsStateRestore:He,restoreStateIfNeeded:$e};function Xe(e,t){return e(t)}function qe(e,t,n){return e(t,n)}function Qe(){}var Ke=!1;function Ge(e,t){if(Ke)return e(t);Ke=!0;try{return Xe(e,t)}finally{Ke=!1,He()&&(Qe(),$e())}}var Ze={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Je(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ze[e.type]:"textarea"===t}function et(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function tt(e,t){return!(!a.canUseDOM||t&&!("addEventListener"in document))&&((t=(e="on"+e)in document)||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t)}function nt(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function rt(e){e._valueTracker||(e._valueTracker=function(e){var t=nt(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ot(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=nt(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var at=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,it="function"==typeof Symbol&&Symbol.for,lt=it?Symbol.for("react.element"):60103,ut=it?Symbol.for("react.portal"):60106,st=it?Symbol.for("react.fragment"):60107,ct=it?Symbol.for("react.strict_mode"):60108,ft=it?Symbol.for("react.profiler"):60114,dt=it?Symbol.for("react.provider"):60109,pt=it?Symbol.for("react.context"):60110,ht=it?Symbol.for("react.async_mode"):60111,mt=it?Symbol.for("react.forward_ref"):60112,vt=it?Symbol.for("react.timeout"):60113,gt="function"==typeof Symbol&&Symbol.iterator;function yt(e){return null===e||void 0===e?null:"function"==typeof(e=gt&&e[gt]||e["@@iterator"])?e:null}function bt(e){var t=e.type;if("function"==typeof t)return t.displayName||t.name;if("string"==typeof t)return t;switch(t){case ht:return"AsyncMode";case pt:return"Context.Consumer";case st:return"ReactFragment";case ut:return"ReactPortal";case ft:return"Profiler("+e.pendingProps.id+")";case dt:return"Context.Provider";case ct:return"StrictMode";case vt:return"Timeout"}if("object"==typeof t&&null!==t)switch(t.$$typeof){case mt:return""!==(e=t.render.displayName||t.render.name||"")?"ForwardRef("+e+")":"ForwardRef"}return null}function wt(e){var t="";do{e:switch(e.tag){case 0:case 1:case 2:case 5:var n=e._debugOwner,r=e._debugSource,o=bt(e),a=null;n&&(a=bt(n)),n=r,o="\n    in "+(o||"Unknown")+(n?" (at "+n.fileName.replace(/^.*[\\\/]/,"")+":"+n.lineNumber+")":a?" (created by "+a+")":"");break e;default:o=""}t+=o,e=e.return}while(e);return t}var xt=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Et=Object.prototype.hasOwnProperty,kt={},Ct={};function _t(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var Tt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){Tt[e]=new _t(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];Tt[t]=new _t(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){Tt[e]=new _t(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(e){Tt[e]=new _t(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){Tt[e]=new _t(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){Tt[e]=new _t(e,3,!0,e.toLowerCase(),null)}),["capture","download"].forEach(function(e){Tt[e]=new _t(e,4,!1,e.toLowerCase(),null)}),["cols","rows","size","span"].forEach(function(e){Tt[e]=new _t(e,6,!1,e.toLowerCase(),null)}),["rowSpan","start"].forEach(function(e){Tt[e]=new _t(e,5,!1,e.toLowerCase(),null)});var St=/[\-:]([a-z])/g;function Pt(e){return e[1].toUpperCase()}function Ot(e,t,n,r){var o=Tt.hasOwnProperty(t)?Tt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||void 0===t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!Et.call(Ct,e)||!Et.call(kt,e)&&(xt.test(e)?Ct[e]=!0:(kt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Nt(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Mt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=It(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Rt(e,t){null!=(t=t.checked)&&Ot(e,"checked",t,!1)}function jt(e,t){Rt(e,t);var n=It(t.value);null!=n&&("number"===t.type?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n)),t.hasOwnProperty("value")?Ut(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ut(e,t.type,It(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Lt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){t=""+e._wrapperState.initialValue;var r=e.value;n||t===r||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==n&&(e.name=n)}function Ut(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function It(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(St,Pt);Tt[t]=new _t(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(St,Pt);Tt[t]=new _t(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(St,Pt);Tt[t]=new _t(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),Tt.tabIndex=new _t("tabIndex",1,!1,"tabindex",null);var Ft={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Dt(e,t,n){return(e=we.getPooled(Ft.change,e,t,n)).type="change",We(n),ee(e),e}var zt=null,At=null;function Bt(e){F(e,!1)}function Vt(e){if(ot(H(e)))return e}function Wt(e,t){if("change"===e)return t}var Ht=!1;function $t(){zt&&(zt.detachEvent("onpropertychange",Yt),At=zt=null)}function Yt(e){"value"===e.propertyName&&Vt(At)&&Ge(Bt,e=Dt(At,e,et(e)))}function Xt(e,t,n){"focus"===e?($t(),At=n,(zt=t).attachEvent("onpropertychange",Yt)):"blur"===e&&$t()}function qt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Vt(At)}function Qt(e,t){if("click"===e)return Vt(t)}function Kt(e,t){if("input"===e||"change"===e)return Vt(t)}a.canUseDOM&&(Ht=tt("input")&&(!document.documentMode||9<document.documentMode));var Gt={eventTypes:Ft,_isInputEventSupported:Ht,extractEvents:function(e,t,n,r){var o=t?H(t):window,a=void 0,i=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?a=Wt:Je(o)?Ht?a=Kt:(a=qt,i=Xt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Qt),a&&(a=a(e,t)))return Dt(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Ut(o,"number",o.value)}},Zt=we.extend({view:null,detail:null}),Jt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function en(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Jt[e])&&!!t[e]}function tn(){return en}var nn=Zt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:tn,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}}),rn=nn.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),on={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},an={eventTypes:on,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?W(t):null):a=null,a===t)return null;var i=void 0,l=void 0,u=void 0,s=void 0;return"mouseout"===e||"mouseover"===e?(i=nn,l=on.mouseLeave,u=on.mouseEnter,s="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=rn,l=on.pointerLeave,u=on.pointerEnter,s="pointer"),e=null==a?o:H(a),o=null==t?o:H(t),(l=i.getPooled(l,a,n,r)).type=s+"leave",l.target=e,l.relatedTarget=o,(n=i.getPooled(u,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=e,te(l,n,a,t),[l,n]}};function ln(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function un(e){2!==ln(e)&&d("188")}function sn(e){var t=e.alternate;if(!t)return 3===(t=ln(e))&&d("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var i=o.child;i;){if(i===n)return un(o),e;if(i===r)return un(o),t;i=i.sibling}d("188")}if(n.return!==r.return)n=o,r=a;else{i=!1;for(var l=o.child;l;){if(l===n){i=!0,n=o,r=a;break}if(l===r){i=!0,r=o,n=a;break}l=l.sibling}if(!i){for(l=a.child;l;){if(l===n){i=!0,n=a,r=o;break}if(l===r){i=!0,r=a,n=o;break}l=l.sibling}i||d("189")}}n.alternate!==r&&d("190")}return 3!==n.tag&&d("188"),n.stateNode.current===n?e:t}function cn(e){if(!(e=sn(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var fn=we.extend({animationName:null,elapsedTime:null,pseudoElement:null}),dn=we.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),pn=Zt.extend({relatedTarget:null});function hn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var mn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},vn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},gn=Zt.extend({key:function(e){if(e.key){var t=mn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=hn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?vn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:tn,charCode:function(e){return"keypress"===e.type?hn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?hn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),yn=nn.extend({dataTransfer:null}),bn=Zt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:tn}),wn=we.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),xn=nn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),En=[["abort","abort"],[ue,"animationEnd"],[se,"animationIteration"],[ce,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[fe,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],kn={},Cn={};function _n(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},kn[e]=t,Cn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){_n(e,!0)}),En.forEach(function(e){_n(e,!1)});var Tn={eventTypes:kn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=Cn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=Cn[e];if(!o)return null;switch(e){case"keypress":if(0===hn(n))return null;case"keydown":case"keyup":e=gn;break;case"blur":case"focus":e=pn;break;case"click":if(2===n.button)return null;case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=nn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=bn;break;case ue:case se:case ce:e=fn;break;case fe:e=wn;break;case"scroll":e=Zt;break;case"wheel":e=xn;break;case"copy":case"cut":case"paste":e=dn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=rn;break;default:e=we}return ee(t=e.getPooled(o,t,n,r)),t}},Sn=Tn.isInteractiveTopLevelEventType,Pn=[];function On(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=W(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],D(e.topLevelType,t,e.nativeEvent,et(e.nativeEvent))}var Nn=!0;function Mn(e){Nn=!!e}function Rn(e,t){if(!t)return null;var n=(Sn(e)?Ln:Un).bind(null,e);t.addEventListener(e,n,!1)}function jn(e,t){if(!t)return null;var n=(Sn(e)?Ln:Un).bind(null,e);t.addEventListener(e,n,!0)}function Ln(e,t){qe(Un,e,t)}function Un(e,t){if(Nn){var n=et(t);if(null===(n=W(n))||"number"!=typeof n.tag||2===ln(n)||(n=null),Pn.length){var r=Pn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ge(On,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Pn.length&&Pn.push(e)}}}var In={get _enabled(){return Nn},setEnabled:Mn,isEnabled:function(){return Nn},trapBubbledEvent:Rn,trapCapturedEvent:jn,dispatchEvent:Un},Fn={},Dn=0,zn="_reactListenersID"+(""+Math.random()).slice(2);function An(e){return Object.prototype.hasOwnProperty.call(e,zn)||(e[zn]=Dn++,Fn[e[zn]]={}),Fn[e[zn]]}function Bn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Vn(e,t){var n,r=Bn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Bn(r)}}function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Hn=a.canUseDOM&&"documentMode"in document&&11>=document.documentMode,$n={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Yn=null,Xn=null,qn=null,Qn=!1;function Kn(e,t){if(Qn||null==Yn||Yn!==u())return null;var n=Yn;return"selectionStart"in n&&Wn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,qn&&s(qn,n)?null:(qn=n,(e=we.getPooled($n.select,Xn,e,t)).type="select",e.target=Yn,ee(e),e)}var Gn={eventTypes:$n,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=An(a),o=x.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?H(t):window,e){case"focus":(Je(a)||"true"===a.contentEditable)&&(Yn=a,Xn=t,qn=null);break;case"blur":qn=Xn=Yn=null;break;case"mousedown":Qn=!0;break;case"contextmenu":case"mouseup":return Qn=!1,Kn(n,r);case"selectionchange":if(Hn)break;case"keydown":case"keyup":return Kn(n,r)}return null}};U.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),_=Y.getFiberCurrentPropsFromNode,T=Y.getInstanceFromNode,S=Y.getNodeFromInstance,U.injectEventPluginsByName({SimpleEventPlugin:Tn,EnterLeaveEventPlugin:an,ChangeEventPlugin:Gt,SelectEventPlugin:Gn,BeforeInputEventPlugin:Fe});var Zn="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,Jn=Date,er=setTimeout,tr=clearTimeout,nr=void 0;if("object"==typeof performance&&"function"==typeof performance.now){var rr=performance;nr=function(){return rr.now()}}else nr=function(){return Jn.now()};var or=void 0,ar=void 0;if(a.canUseDOM){var ir="function"==typeof Zn?Zn:function(){d("276")},lr=null,ur=null,sr=-1,cr=!1,fr=!1,dr=0,pr=33,hr=33,mr={didTimeout:!1,timeRemaining:function(){var e=dr-nr();return 0<e?e:0}},vr=function(e,t){var n=e.scheduledCallback,r=!1;try{n(t),r=!0}finally{ar(e),r||(cr=!0,window.postMessage(gr,"*"))}},gr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===gr&&(cr=!1,null!==lr)){if(null!==lr){var t=nr();if(!(-1===sr||sr>t)){e=-1;for(var n=[],r=lr;null!==r;){var o=r.timeoutTime;-1!==o&&o<=t?n.push(r):-1!==o&&(-1===e||o<e)&&(e=o),r=r.next}if(0<n.length)for(mr.didTimeout=!0,t=0,r=n.length;t<r;t++)vr(n[t],mr);sr=e}}for(e=nr();0<dr-e&&null!==lr;)e=lr,mr.didTimeout=!1,vr(e,mr),e=nr();null===lr||fr||(fr=!0,ir(yr))}},!1);var yr=function(e){fr=!1;var t=e-dr+hr;t<hr&&pr<hr?(8>t&&(t=8),hr=t<pr?pr:t):pr=t,dr=e+hr,cr||(cr=!0,window.postMessage(gr,"*"))};or=function(e,t){var n=-1;return null!=t&&"number"==typeof t.timeout&&(n=nr()+t.timeout),(-1===sr||-1!==n&&n<sr)&&(sr=n),e={scheduledCallback:e,timeoutTime:n,prev:null,next:null},null===lr?lr=e:null!==(t=e.prev=ur)&&(t.next=e),ur=e,fr||(fr=!0,ir(yr)),e},ar=function(e){if(null!==e.prev||lr===e){var t=e.next,n=e.prev;e.next=null,e.prev=null,null!==t?null!==n?(n.next=t,t.prev=n):(t.prev=null,lr=t):null!==n?(n.next=null,ur=n):ur=lr=null}}}else{var br=new Map;or=function(e){var t={scheduledCallback:e,timeoutTime:0,next:null,prev:null},n=er(function(){e({timeRemaining:function(){return 1/0},didTimeout:!1})});return br.set(e,n),t},ar=function(e){var t=br.get(e.scheduledCallback);br.delete(e),tr(t)}}function wr(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function xr(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Er(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function kr(e,t){return null!=t.dangerouslySetInnerHTML&&d("91"),i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Cr(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&d("92"),Array.isArray(t)&&(1>=t.length||d("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function _r(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function Tr(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var Sr={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Pr(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Or(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Pr(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Nr=void 0,Mr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Sr.svg||"innerHTML"in e)e.innerHTML=t;else{for((Nr=Nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=Nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function Rr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var jr={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Lr=["Webkit","ms","Moz","O"];function Ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,a=t[n];o=null==a||"boolean"==typeof a||""===a?"":r||"number"!=typeof a||0===a||jr.hasOwnProperty(o)&&jr[o]?(""+a).trim():a+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(jr).forEach(function(e){Lr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),jr[t]=jr[e]})});var Ir=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Fr(e,t,n){t&&(Ir[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&d("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&d("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||d("61")),null!=t.style&&"object"!=typeof t.style&&d("62",n()))}function Dr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var zr=l.thatReturns("");function Ar(e,t){var n=An(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=x[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":jn("scroll",e);break;case"focus":case"blur":jn("focus",e),jn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":tt(o,!0)&&jn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===de.indexOf(o)&&Rn(o,e)}n[o]=!0}}}function Br(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===Sr.html&&(r=Pr(e)),r===Sr.html?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function Vr(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function Wr(e,t,n,r){var o=Dr(t,n);switch(t){case"iframe":case"object":Rn("load",e);var a=n;break;case"video":case"audio":for(a=0;a<de.length;a++)Rn(de[a],e);a=n;break;case"source":Rn("error",e),a=n;break;case"img":case"image":case"link":Rn("error",e),Rn("load",e),a=n;break;case"form":Rn("reset",e),Rn("submit",e),a=n;break;case"details":Rn("toggle",e),a=n;break;case"input":Mt(e,n),a=Nt(e,n),Rn("invalid",e),Ar(r,"onChange");break;case"option":a=wr(e,n);break;case"select":Er(e,n),a=i({},n,{value:void 0}),Rn("invalid",e),Ar(r,"onChange");break;case"textarea":Cr(e,n),a=kr(e,n),Rn("invalid",e),Ar(r,"onChange");break;default:a=n}Fr(t,a,zr);var u,s=a;for(u in s)if(s.hasOwnProperty(u)){var c=s[u];"style"===u?Ur(e,c):"dangerouslySetInnerHTML"===u?null!=(c=c?c.__html:void 0)&&Mr(e,c):"children"===u?"string"==typeof c?("textarea"!==t||""!==c)&&Rr(e,c):"number"==typeof c&&Rr(e,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(w.hasOwnProperty(u)?null!=c&&Ar(r,u):null!=c&&Ot(e,u,c,o))}switch(t){case"input":rt(e),Lt(e,n,!1);break;case"textarea":rt(e),Tr(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?xr(e,!!n.multiple,t,!1):null!=n.defaultValue&&xr(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=l)}}function Hr(e,t,n,r,o){var a=null;switch(t){case"input":n=Nt(e,n),r=Nt(e,r),a=[];break;case"option":n=wr(e,n),r=wr(e,r),a=[];break;case"select":n=i({},n,{value:void 0}),r=i({},r,{value:void 0}),a=[];break;case"textarea":n=kr(e,n),r=kr(e,r),a=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=l)}Fr(t,r,zr),t=e=void 0;var u=null;for(e in n)if(!r.hasOwnProperty(e)&&n.hasOwnProperty(e)&&null!=n[e])if("style"===e){var s=n[e];for(t in s)s.hasOwnProperty(t)&&(u||(u={}),u[t]="")}else"dangerouslySetInnerHTML"!==e&&"children"!==e&&"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&"autoFocus"!==e&&(w.hasOwnProperty(e)?a||(a=[]):(a=a||[]).push(e,null));for(e in r){var c=r[e];if(s=null!=n?n[e]:void 0,r.hasOwnProperty(e)&&c!==s&&(null!=c||null!=s))if("style"===e)if(s){for(t in s)!s.hasOwnProperty(t)||c&&c.hasOwnProperty(t)||(u||(u={}),u[t]="");for(t in c)c.hasOwnProperty(t)&&s[t]!==c[t]&&(u||(u={}),u[t]=c[t])}else u||(a||(a=[]),a.push(e,u)),u=c;else"dangerouslySetInnerHTML"===e?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(a=a||[]).push(e,""+c)):"children"===e?s===c||"string"!=typeof c&&"number"!=typeof c||(a=a||[]).push(e,""+c):"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&(w.hasOwnProperty(e)?(null!=c&&Ar(o,e),a||s===c||(a=[])):(a=a||[]).push(e,c))}return u&&(a=a||[]).push("style",u),a}function $r(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&Rt(e,o),Dr(n,r),r=Dr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?Ur(e,l):"dangerouslySetInnerHTML"===i?Mr(e,l):"children"===i?Rr(e,l):Ot(e,i,l,r)}switch(n){case"input":jt(e,o);break;case"textarea":_r(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?xr(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?xr(e,!!o.multiple,o.defaultValue,!0):xr(e,!!o.multiple,o.multiple?[]:"",!1))}}function Yr(e,t,n,r,o){switch(t){case"iframe":case"object":Rn("load",e);break;case"video":case"audio":for(r=0;r<de.length;r++)Rn(de[r],e);break;case"source":Rn("error",e);break;case"img":case"image":case"link":Rn("error",e),Rn("load",e);break;case"form":Rn("reset",e),Rn("submit",e);break;case"details":Rn("toggle",e);break;case"input":Mt(e,n),Rn("invalid",e),Ar(o,"onChange");break;case"select":Er(e,n),Rn("invalid",e),Ar(o,"onChange");break;case"textarea":Cr(e,n),Rn("invalid",e),Ar(o,"onChange")}for(var a in Fr(t,n,zr),r=null,n)if(n.hasOwnProperty(a)){var i=n[a];"children"===a?"string"==typeof i?e.textContent!==i&&(r=["children",i]):"number"==typeof i&&e.textContent!==""+i&&(r=["children",""+i]):w.hasOwnProperty(a)&&null!=i&&Ar(o,a)}switch(t){case"input":rt(e),Lt(e,n,!0);break;case"textarea":rt(e),Tr(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=l)}return r}function Xr(e,t){return e.nodeValue!==t}var qr={createElement:Br,createTextNode:Vr,setInitialProperties:Wr,diffProperties:Hr,updateProperties:$r,diffHydratedProperties:Yr,diffHydratedText:Xr,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(jt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=$(r);o||d("90"),ot(r),jt(r,o)}}}break;case"textarea":_r(e,n);break;case"select":null!=(t=n.value)&&xr(e,!!n.multiple,t,!1)}}},Qr=null,Kr=null;function Gr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Zr(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html}var Jr=nr,eo=or,to=ar;function no(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function ro(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var oo=[],ao=-1;function io(e){return{current:e}}function lo(e){0>ao||(e.current=oo[ao],oo[ao]=null,ao--)}function uo(e,t){oo[++ao]=e.current,e.current=t}var so=io(f),co=io(!1),fo=f;function po(e){return mo(e)?fo:so.current}function ho(e,t){var n=e.type.contextTypes;if(!n)return f;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function mo(e){return 2===e.tag&&null!=e.type.childContextTypes}function vo(e){mo(e)&&(lo(co),lo(so))}function go(e){lo(co),lo(so)}function yo(e,t,n){so.current!==f&&d("168"),uo(so,t),uo(co,n)}function bo(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||d("108",bt(e)||"Unknown",o);return i({},t,n)}function wo(e){if(!mo(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||f,fo=so.current,uo(so,t),uo(co,co.current),!0}function xo(e,t){var n=e.stateNode;if(n||d("169"),t){var r=bo(e,fo);n.__reactInternalMemoizedMergedChildContext=r,lo(co),lo(so),uo(so,r)}else lo(co);uo(co,t)}function Eo(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=null,this.index=0,this.ref=null,this.pendingProps=t,this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function ko(e,t,n){var r=e.alternate;return null===r?((r=new Eo(e.tag,t,e.key,e.mode)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Co(e,t,n){var r=e.type,o=e.key;if(e=e.props,"function"==typeof r)var a=r.prototype&&r.prototype.isReactComponent?2:0;else if("string"==typeof r)a=5;else switch(r){case st:return _o(e.children,t,n,o);case ht:a=11,t|=3;break;case ct:a=11,t|=2;break;case ft:return(r=new Eo(15,e,o,4|t)).type=ft,r.expirationTime=n,r;case vt:a=16,t|=2;break;default:e:{switch("object"==typeof r&&null!==r?r.$$typeof:null){case dt:a=13;break e;case pt:a=12;break e;case mt:a=14;break e;default:d("130",null==r?r:typeof r,"")}a=void 0}}return(t=new Eo(a,e,o,t)).type=r,t.expirationTime=n,t}function _o(e,t,n,r){return(e=new Eo(10,e,r,t)).expirationTime=n,e}function To(e,t,n){return(e=new Eo(6,e,null,t)).expirationTime=n,e}function So(e,t,n){return(t=new Eo(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Po(e,t,n){return e={current:t=new Eo(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:n,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null},t.stateNode=e}var Oo=null,No=null;function Mo(e){return function(t){try{return e(t)}catch(e){}}}function Ro(e){"function"==typeof Oo&&Oo(e)}function jo(e){"function"==typeof No&&No(e)}var Lo=!1;function Uo(e){return{expirationTime:0,baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Io(e){return{expirationTime:e.expirationTime,baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Fo(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Do(e,t,n){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t),(0===e.expirationTime||e.expirationTime>n)&&(e.expirationTime=n)}function zo(e,t,n){var r=e.alternate;if(null===r){var o=e.updateQueue,a=null;null===o&&(o=e.updateQueue=Uo(e.memoizedState))}else o=e.updateQueue,a=r.updateQueue,null===o?null===a?(o=e.updateQueue=Uo(e.memoizedState),a=r.updateQueue=Uo(r.memoizedState)):o=e.updateQueue=Io(a):null===a&&(a=r.updateQueue=Io(o));null===a||o===a?Do(o,t,n):null===o.lastUpdate||null===a.lastUpdate?(Do(o,t,n),Do(a,t,n)):(Do(o,t,n),a.lastUpdate=t)}function Ao(e,t,n){var r=e.updateQueue;null===(r=null===r?e.updateQueue=Uo(e.memoizedState):Bo(e,r)).lastCapturedUpdate?r.firstCapturedUpdate=r.lastCapturedUpdate=t:(r.lastCapturedUpdate.next=t,r.lastCapturedUpdate=t),(0===r.expirationTime||r.expirationTime>n)&&(r.expirationTime=n)}function Bo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Io(t)),t}function Vo(e,t,n,r,o,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,o):e;case 3:e.effectTag=-1025&e.effectTag|64;case 0:if(null===(o="function"==typeof(e=n.payload)?e.call(a,r,o):e)||void 0===o)break;return i({},r,o);case 2:Lo=!0}return r}function Wo(e,t,n,r,o){if(Lo=!1,!(0===t.expirationTime||t.expirationTime>o)){for(var a=(t=Bo(e,t)).baseState,i=null,l=0,u=t.firstUpdate,s=a;null!==u;){var c=u.expirationTime;c>o?(null===i&&(i=u,a=s),(0===l||l>c)&&(l=c)):(s=Vo(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(c=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f>o?(null===c&&(c=u,null===i&&(a=s)),(0===l||l>f)&&(l=f)):(s=Vo(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===c&&(a=s),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=c,t.expirationTime=l,e.memoizedState=s}}function Ho(e,t){"function"!=typeof e&&d("191",e),e.call(t)}function $o(e,t,n){for(null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),e=t.firstEffect,t.firstEffect=t.lastEffect=null;null!==e;){var r=e.callback;null!==r&&(e.callback=null,Ho(r,n)),e=e.nextEffect}for(e=t.firstCapturedEffect,t.firstCapturedEffect=t.lastCapturedEffect=null;null!==e;)null!==(t=e.callback)&&(e.callback=null,Ho(t,n)),e=e.nextEffect}function Yo(e,t){return{value:e,source:t,stack:wt(t)}}var Xo=io(null),qo=io(null),Qo=io(0);function Ko(e){var t=e.type._context;uo(Qo,t._changedBits),uo(qo,t._currentValue),uo(Xo,e),t._currentValue=e.pendingProps.value,t._changedBits=e.stateNode}function Go(e){var t=Qo.current,n=qo.current;lo(Xo),lo(qo),lo(Qo),(e=e.type._context)._currentValue=n,e._changedBits=t}var Zo={},Jo=io(Zo),ea=io(Zo),ta=io(Zo);function na(e){return e===Zo&&d("174"),e}function ra(e,t){uo(ta,t),uo(ea,e),uo(Jo,Zo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Or(null,"");break;default:t=Or(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}lo(Jo),uo(Jo,t)}function oa(e){lo(Jo),lo(ea),lo(ta)}function aa(e){ea.current===e&&(lo(Jo),lo(ea))}function ia(e,t,n){var r=e.memoizedState;r=null===(t=t(n,r))||void 0===t?r:i({},r,t),e.memoizedState=r,null!==(e=e.updateQueue)&&0===e.expirationTime&&(e.baseState=r)}var la={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===ln(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=bi(),o=Fo(r=gi(r,e));o.payload=t,void 0!==n&&null!==n&&(o.callback=n),zo(e,o,r),yi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=bi(),o=Fo(r=gi(r,e));o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),zo(e,o,r),yi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=bi(),r=Fo(n=gi(n,e));r.tag=2,void 0!==t&&null!==t&&(r.callback=t),zo(e,r,n),yi(e,n)}};function ua(e,t,n,r,o,a){var i=e.stateNode;return e=e.type,"function"==typeof i.shouldComponentUpdate?i.shouldComponentUpdate(n,o,a):!e.prototype||!e.prototype.isPureReactComponent||(!s(t,n)||!s(r,o))}function sa(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&la.enqueueReplaceState(t,t.state,null)}function ca(e,t){var n=e.type,r=e.stateNode,o=e.pendingProps,a=po(e);r.props=o,r.state=e.memoizedState,r.refs=f,r.context=ho(e,a),null!==(a=e.updateQueue)&&(Wo(e,a,o,r,t),r.state=e.memoizedState),"function"==typeof(a=e.type.getDerivedStateFromProps)&&(ia(e,a,o),r.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof r.getSnapshotBeforeUpdate||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||(n=r.state,"function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),n!==r.state&&la.enqueueReplaceState(r,r.state,null),null!==(a=e.updateQueue)&&(Wo(e,a,o,r,t),r.state=e.memoizedState)),"function"==typeof r.componentDidMount&&(e.effectTag|=4)}var fa=Array.isArray;function da(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(2!==n.tag&&d("110"),r=n.stateNode),r||d("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs===f?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&d("148"),n._owner||d("254",e)}return e}function pa(e,t){"textarea"!==e.type&&d("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function ha(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=ko(e,t,n)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function i(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=To(n,e.mode,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function u(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=da(e,t,n),r.return=e,r):((r=Co(n,e.mode,r)).ref=da(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=So(n,e.mode,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function c(e,t,n,r,a){return null===t||10!==t.tag?((t=_o(n,e.mode,r,a)).return=e,t):((t=o(t,n,r)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=To(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case lt:return(n=Co(t,e.mode,n)).ref=da(e,null,t),n.return=e,n;case ut:return(t=So(t,e.mode,n)).return=e,t}if(fa(t)||yt(t))return(t=_o(t,e.mode,n,null)).return=e,t;pa(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case lt:return n.key===o?n.type===st?c(e,t,n.props.children,r,o):u(e,t,n,r):null;case ut:return n.key===o?s(e,t,n,r):null}if(fa(n)||yt(n))return null!==o?null:c(e,t,n,r,null);pa(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case lt:return e=e.get(null===r.key?n:r.key)||null,r.type===st?c(t,e,r.props.children,o,r.key):u(t,e,r,o);case ut:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(fa(r)||yt(r))return c(t,e=e.get(n)||null,r,o,null);pa(t,r)}return null}function m(o,i,l,u){for(var s=null,c=null,d=i,m=i=0,v=null;null!==d&&m<l.length;m++){d.index>m?(v=d,d=null):v=d.sibling;var g=p(o,d,l[m],u);if(null===g){null===d&&(d=v);break}e&&d&&null===g.alternate&&t(o,d),i=a(g,i,m),null===c?s=g:c.sibling=g,c=g,d=v}if(m===l.length)return n(o,d),s;if(null===d){for(;m<l.length;m++)(d=f(o,l[m],u))&&(i=a(d,i,m),null===c?s=d:c.sibling=d,c=d);return s}for(d=r(o,d);m<l.length;m++)(v=h(d,o,m,l[m],u))&&(e&&null!==v.alternate&&d.delete(null===v.key?m:v.key),i=a(v,i,m),null===c?s=v:c.sibling=v,c=v);return e&&d.forEach(function(e){return t(o,e)}),s}function v(o,i,l,u){var s=yt(l);"function"!=typeof s&&d("150"),null==(l=s.call(l))&&d("151");for(var c=s=null,m=i,v=i=0,g=null,y=l.next();null!==m&&!y.done;v++,y=l.next()){m.index>v?(g=m,m=null):g=m.sibling;var b=p(o,m,y.value,u);if(null===b){m||(m=g);break}e&&m&&null===b.alternate&&t(o,m),i=a(b,i,v),null===c?s=b:c.sibling=b,c=b,m=g}if(y.done)return n(o,m),s;if(null===m){for(;!y.done;v++,y=l.next())null!==(y=f(o,y.value,u))&&(i=a(y,i,v),null===c?s=y:c.sibling=y,c=y);return s}for(m=r(o,m);!y.done;v++,y=l.next())null!==(y=h(m,o,v,y.value,u))&&(e&&null!==y.alternate&&m.delete(null===y.key?v:y.key),i=a(y,i,v),null===c?s=y:c.sibling=y,c=y);return e&&m.forEach(function(e){return t(o,e)}),s}return function(e,r,a,l){var u="object"==typeof a&&null!==a&&a.type===st&&null===a.key;u&&(a=a.props.children);var s="object"==typeof a&&null!==a;if(s)switch(a.$$typeof){case lt:e:{for(s=a.key,u=r;null!==u;){if(u.key===s){if(10===u.tag?a.type===st:u.type===a.type){n(e,u.sibling),(r=o(u,a.type===st?a.props.children:a.props,l)).ref=da(e,u,a),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}a.type===st?((r=_o(a.props.children,e.mode,l,a.key)).return=e,e=r):((l=Co(a,e.mode,l)).ref=da(e,r,a),l.return=e,e=l)}return i(e);case ut:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[],l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=So(a,e.mode,l)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a,l)).return=e,e=r):(n(e,r),(r=To(a,e.mode,l)).return=e,e=r),i(e);if(fa(a))return m(e,r,a,l);if(yt(a))return v(e,r,a,l);if(s&&pa(e,a),void 0===a&&!u)switch(e.tag){case 2:case 1:d("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var ma=ha(!0),va=ha(!1),ga=null,ya=null,ba=!1;function wa(e,t){var n=new Eo(5,null,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function xa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Ea(e){if(ba){var t=ya;if(t){var n=t;if(!xa(e,t)){if(!(t=no(n))||!xa(e,t))return e.effectTag|=2,ba=!1,void(ga=e);wa(ga,n)}ga=e,ya=ro(t)}else e.effectTag|=2,ba=!1,ga=e}}function ka(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;ga=e}function Ca(e){if(e!==ga)return!1;if(!ba)return ka(e),ba=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Zr(t,e.memoizedProps))for(t=ya;t;)wa(e,t),t=no(t);return ka(e),ya=ga?no(e.stateNode):null,!0}function _a(){ya=ga=null,ba=!1}function Ta(e,t,n){Sa(e,t,n,t.expirationTime)}function Sa(e,t,n,r){t.child=null===e?va(t,null,n,r):ma(t,e.child,n,r)}function Pa(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Oa(e,t,n,r,o){Pa(e,t);var a=0!=(64&t.effectTag);if(!n&&!a)return r&&xo(t,!1),Ra(e,t);n=t.stateNode,at.current=t;var i=a?null:n.render();return t.effectTag|=1,a&&(Sa(e,t,null,o),t.child=null),Sa(e,t,i,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&xo(t,!0),t.child}function Na(e){var t=e.stateNode;t.pendingContext?yo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&yo(0,t.context,!1),ra(e,t.containerInfo)}function Ma(e,t,n,r){var o=e.child;for(null!==o&&(o.return=e);null!==o;){switch(o.tag){case 12:var a=0|o.stateNode;if(o.type===t&&0!=(a&n)){for(a=o;null!==a;){var i=a.alternate;if(0===a.expirationTime||a.expirationTime>r)a.expirationTime=r,null!==i&&(0===i.expirationTime||i.expirationTime>r)&&(i.expirationTime=r);else{if(null===i||!(0===i.expirationTime||i.expirationTime>r))break;i.expirationTime=r}a=a.return}a=null}else a=o.child;break;case 13:a=o.type===e.type?null:o.child;break;default:a=o.child}if(null!==a)a.return=o;else for(a=o;null!==a;){if(a===e){a=null;break}if(null!==(o=a.sibling)){o.return=a.return,a=o;break}a=a.return}o=a}}function Ra(e,t){if(null!==e&&t.child!==e.child&&d("153"),null!==t.child){var n=ko(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=ko(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function ja(e,t,n){if(0===t.expirationTime||t.expirationTime>n){switch(t.tag){case 3:Na(t);break;case 2:wo(t);break;case 4:ra(t,t.stateNode.containerInfo);break;case 13:Ko(t)}return null}switch(t.tag){case 0:null!==e&&d("155");var r=t.type,o=t.pendingProps,a=po(t);return r=r(o,a=ho(t,a)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof?(a=t.type,t.tag=2,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,"function"==typeof(a=a.getDerivedStateFromProps)&&ia(t,a,o),o=wo(t),r.updater=la,t.stateNode=r,r._reactInternalFiber=t,ca(t,n),e=Oa(e,t,!0,o,n)):(t.tag=1,Ta(e,t,r),t.memoizedProps=o,e=t.child),e;case 1:return o=t.type,n=t.pendingProps,co.current||t.memoizedProps!==n?(o=o(n,r=ho(t,r=po(t))),t.effectTag|=1,Ta(e,t,o),t.memoizedProps=n,e=t.child):e=Ra(e,t),e;case 2:if(o=wo(t),null===e)if(null===t.stateNode){var i=t.pendingProps,l=t.type;r=po(t);var u=2===t.tag&&null!=t.type.contextTypes;i=new l(i,a=u?ho(t,r):f),t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,i.updater=la,t.stateNode=i,i._reactInternalFiber=t,u&&((u=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,u.__reactInternalMemoizedMaskedChildContext=a),ca(t,n),r=!0}else{l=t.type,r=t.stateNode,u=t.memoizedProps,a=t.pendingProps,r.props=u;var s=r.context;i=ho(t,i=po(t));var c=l.getDerivedStateFromProps;(l="function"==typeof c||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(u!==a||s!==i)&&sa(t,r,a,i),Lo=!1;var p=t.memoizedState;s=r.state=p;var h=t.updateQueue;null!==h&&(Wo(t,h,a,r,n),s=t.memoizedState),u!==a||p!==s||co.current||Lo?("function"==typeof c&&(ia(t,c,a),s=t.memoizedState),(u=Lo||ua(t,u,a,p,s,i))?(l||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||("function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount()),"function"==typeof r.componentDidMount&&(t.effectTag|=4)):("function"==typeof r.componentDidMount&&(t.effectTag|=4),t.memoizedProps=a,t.memoizedState=s),r.props=a,r.state=s,r.context=i,r=u):("function"==typeof r.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.type,r=t.stateNode,a=t.memoizedProps,u=t.pendingProps,r.props=a,s=r.context,i=ho(t,i=po(t)),(l="function"==typeof(c=l.getDerivedStateFromProps)||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(a!==u||s!==i)&&sa(t,r,u,i),Lo=!1,s=t.memoizedState,p=r.state=s,null!==(h=t.updateQueue)&&(Wo(t,h,u,r,n),p=t.memoizedState),a!==u||s!==p||co.current||Lo?("function"==typeof c&&(ia(t,c,u),p=t.memoizedState),(c=Lo||ua(t,a,u,s,p,i))?(l||"function"!=typeof r.UNSAFE_componentWillUpdate&&"function"!=typeof r.componentWillUpdate||("function"==typeof r.componentWillUpdate&&r.componentWillUpdate(u,p,i),"function"==typeof r.UNSAFE_componentWillUpdate&&r.UNSAFE_componentWillUpdate(u,p,i)),"function"==typeof r.componentDidUpdate&&(t.effectTag|=4),"function"==typeof r.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof r.componentDidUpdate||a===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||a===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),t.memoizedProps=u,t.memoizedState=p),r.props=u,r.state=p,r.context=i,r=c):("function"!=typeof r.componentDidUpdate||a===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||a===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),r=!1);return Oa(e,t,r,o,n);case 3:return Na(t),null!==(o=t.updateQueue)?(r=null!==(r=t.memoizedState)?r.element:null,Wo(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===r?(_a(),e=Ra(e,t)):(r=t.stateNode,(r=(null===e||null===e.child)&&r.hydrate)&&(ya=ro(t.stateNode.containerInfo),ga=t,r=ba=!0),r?(t.effectTag|=2,t.child=va(t,null,o,n)):(_a(),Ta(e,t,o)),e=t.child)):(_a(),e=Ra(e,t)),e;case 5:return na(ta.current),(o=na(Jo.current))!==(r=Or(o,t.type))&&(uo(ea,t),uo(Jo,r)),null===e&&Ea(t),o=t.type,u=t.memoizedProps,r=t.pendingProps,a=null!==e?e.memoizedProps:null,co.current||u!==r||((u=1&t.mode&&!!r.hidden)&&(t.expirationTime=1073741823),u&&1073741823===n)?(u=r.children,Zr(o,r)?u=null:a&&Zr(o,a)&&(t.effectTag|=16),Pa(e,t),1073741823!==n&&1&t.mode&&r.hidden?(t.expirationTime=1073741823,t.memoizedProps=r,e=null):(Ta(e,t,u),t.memoizedProps=r,e=t.child)):e=Ra(e,t),e;case 6:return null===e&&Ea(t),t.memoizedProps=t.pendingProps,null;case 16:return null;case 4:return ra(t,t.stateNode.containerInfo),o=t.pendingProps,co.current||t.memoizedProps!==o?(null===e?t.child=ma(t,null,o,n):Ta(e,t,o),t.memoizedProps=o,e=t.child):e=Ra(e,t),e;case 14:return o=t.type.render,n=t.pendingProps,r=t.ref,co.current||t.memoizedProps!==n||r!==(null!==e?e.ref:null)?(Ta(e,t,o=o(n,r)),t.memoizedProps=n,e=t.child):e=Ra(e,t),e;case 10:return n=t.pendingProps,co.current||t.memoizedProps!==n?(Ta(e,t,n),t.memoizedProps=n,e=t.child):e=Ra(e,t),e;case 11:return n=t.pendingProps.children,co.current||null!==n&&t.memoizedProps!==n?(Ta(e,t,n),t.memoizedProps=n,e=t.child):e=Ra(e,t),e;case 15:return n=t.pendingProps,t.memoizedProps===n?e=Ra(e,t):(Ta(e,t,n.children),t.memoizedProps=n,e=t.child),e;case 13:return function(e,t,n){var r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=!0;if(co.current)i=!1;else if(a===o)return t.stateNode=0,Ko(t),Ra(e,t);var l=o.value;if(t.memoizedProps=o,null===a)l=1073741823;else if(a.value===o.value){if(a.children===o.children&&i)return t.stateNode=0,Ko(t),Ra(e,t);l=0}else{var u=a.value;if(u===l&&(0!==u||1/u==1/l)||u!=u&&l!=l){if(a.children===o.children&&i)return t.stateNode=0,Ko(t),Ra(e,t);l=0}else if(l="function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,l):1073741823,0==(l|=0)){if(a.children===o.children&&i)return t.stateNode=0,Ko(t),Ra(e,t)}else Ma(t,r,l,n)}return t.stateNode=l,Ko(t),Ta(e,t,o.children),t.child}(e,t,n);case 12:e:if(r=t.type,a=t.pendingProps,u=t.memoizedProps,o=r._currentValue,i=r._changedBits,co.current||0!==i||u!==a){if(t.memoizedProps=a,void 0!==(l=a.unstable_observedBits)&&null!==l||(l=1073741823),t.stateNode=l,0!=(i&l))Ma(t,r,i,n);else if(u===a){e=Ra(e,t);break e}n=(n=a.children)(o),t.effectTag|=1,Ta(e,t,n),e=t.child}else e=Ra(e,t);return e;default:d("156")}}function La(e){e.effectTag|=4}var Ua=void 0,Ia=void 0,Fa=void 0;function Da(e,t){var n=t.pendingProps;switch(t.tag){case 1:return null;case 2:return vo(t),null;case 3:oa(),go();var r=t.stateNode;return r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ca(t),t.effectTag&=-3),Ua(t),null;case 5:aa(t),r=na(ta.current);var o=t.type;if(null!==e&&null!=t.stateNode){var a=e.memoizedProps,i=t.stateNode,l=na(Jo.current);i=Hr(i,o,a,n,r),Ia(e,t,i,o,a,n,r,l),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!n)return null===t.stateNode&&d("166"),null;if(e=na(Jo.current),Ca(t))n=t.stateNode,o=t.type,a=t.memoizedProps,n[B]=t,n[V]=a,r=Yr(n,o,a,e,r),t.updateQueue=r,null!==r&&La(t);else{(e=Br(o,n,r,e))[B]=t,e[V]=n;e:for(a=t.child;null!==a;){if(5===a.tag||6===a.tag)e.appendChild(a.stateNode);else if(4!==a.tag&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}Wr(e,o,n,r),Gr(o,n)&&La(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Fa(e,t,e.memoizedProps,n);else{if("string"!=typeof n)return null===t.stateNode&&d("166"),null;r=na(ta.current),na(Jo.current),Ca(t)?(r=t.stateNode,n=t.memoizedProps,r[B]=t,Xr(r,n)&&La(t)):((r=Vr(n,r))[B]=t,t.stateNode=r)}return null;case 14:case 16:case 10:case 11:case 15:return null;case 4:return oa(),Ua(t),null;case 13:return Go(t),null;case 12:return null;case 0:d("167");default:d("156")}}function za(e,t){var n=t.source;null===t.stack&&null!==n&&wt(n),null!==n&&bt(n),t=t.value,null!==e&&2===e.tag&&bt(e);try{t&&t.suppressReactErrorLogging||console.error(t)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}}function Aa(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){mi(e,t)}else t.current=null}function Ba(e){switch(jo(e),e.tag){case 2:Aa(e);var t=e.stateNode;if("function"==typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){mi(e,t)}break;case 5:Aa(e);break;case 4:Ha(e)}}function Va(e){return 5===e.tag||3===e.tag||4===e.tag}function Wa(e){e:{for(var t=e.return;null!==t;){if(Va(t)){var n=t;break e}t=t.return}d("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:d("161")}16&n.effectTag&&(Rr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Va(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,i=o.stateNode,l=n;8===a.nodeType?a.parentNode.insertBefore(i,l):a.insertBefore(i,l)}else t.insertBefore(o.stateNode,n);else r?(a=t,i=o.stateNode,8===a.nodeType?a.parentNode.insertBefore(i,a):a.appendChild(i)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Ha(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&d("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,i=a;;)if(Ba(i),null!==i.child&&4!==i.tag)i.child.return=i,i=i.child;else{if(i===a)break;for(;null===i.sibling;){if(null===i.return||i.return===a)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}o?(a=r,i=t.stateNode,8===a.nodeType?a.parentNode.removeChild(i):a.removeChild(i)):r.removeChild(t.stateNode)}else if(4===t.tag?r=t.stateNode.containerInfo:Ba(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function $a(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&(n[V]=r,$r(n,a,o,e,r))}break;case 6:null===t.stateNode&&d("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 15:case 16:break;default:d("163")}}function Ya(e,t,n){(n=Fo(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Zi(r),za(e,t)},n}function Xa(e,t,n){(n=Fo(n)).tag=3;var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(n.callback=function(){null===ci?ci=new Set([this]):ci.add(this);var n=t.value,r=t.stack;za(e,t),this.componentDidCatch(n,{componentStack:null!==r?r:""})}),n}function qa(e,t,n,r,o,a){n.effectTag|=512,n.firstEffect=n.lastEffect=null,r=Yo(r,n),e=t;do{switch(e.tag){case 3:return e.effectTag|=1024,void Ao(e,r=Ya(e,r,a),a);case 2:if(t=r,n=e.stateNode,0==(64&e.effectTag)&&null!==n&&"function"==typeof n.componentDidCatch&&(null===ci||!ci.has(n)))return e.effectTag|=1024,void Ao(e,r=Xa(e,t,a),a)}e=e.return}while(null!==e)}function Qa(e){switch(e.tag){case 2:vo(e);var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return oa(),go(),1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 5:return aa(e),null;case 16:return 1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 4:return oa(),null;case 13:return Go(e),null;default:return null}}Ua=function(){},Ia=function(e,t,n){(t.updateQueue=n)&&La(t)},Fa=function(e,t,n,r){n!==r&&La(t)};var Ka=Jr(),Ga=2,Za=Ka,Ja=0,ei=0,ti=!1,ni=null,ri=null,oi=0,ai=-1,ii=!1,li=null,ui=!1,si=!1,ci=null;function fi(){if(null!==ni)for(var e=ni.return;null!==e;){var t=e;switch(t.tag){case 2:vo(t);break;case 3:oa(),go();break;case 5:aa(t);break;case 4:oa();break;case 13:Go(t)}e=e.return}ri=null,oi=0,ai=-1,ii=!1,ni=null,si=!1}function di(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(512&e.effectTag)){t=Da(t,e);var o=e;if(1073741823===oi||1073741823!==o.expirationTime){var a=0;switch(o.tag){case 3:case 2:var i=o.updateQueue;null!==i&&(a=i.expirationTime)}for(i=o.child;null!==i;)0!==i.expirationTime&&(0===a||a>i.expirationTime)&&(a=i.expirationTime),i=i.sibling;o.expirationTime=a}if(null!==t)return t;if(null!==n&&0==(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){si=!0;break}e=n}else{if(null!==(e=Qa(e)))return e.effectTag&=511,e;if(null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512),null!==r)return r;if(null===n)break;e=n}}return null}function pi(e){var t=ja(e.alternate,e,oi);return null===t&&(t=di(e)),at.current=null,t}function hi(e,t,n){ti&&d("243"),ti=!0,t===oi&&e===ri&&null!==ni||(fi(),oi=t,ai=-1,ni=ko((ri=e).current,null,oi),e.pendingCommitExpirationTime=0);var r=!1;for(ii=!n||oi<=Ga;;){try{if(n)for(;null!==ni&&!Gi();)ni=pi(ni);else for(;null!==ni;)ni=pi(ni)}catch(t){if(null===ni)r=!0,Zi(t);else{null===ni&&d("271");var o=(n=ni).return;if(null===o){r=!0,Zi(t);break}qa(e,o,n,t,0,oi),ni=di(n)}}break}if(ti=!1,r)return null;if(null===ni){if(si)return e.pendingCommitExpirationTime=t,e.current.alternate;ii&&d("262"),0<=ai&&setTimeout(function(){var t=e.current.expirationTime;0!==t&&(0===e.remainingExpirationTime||e.remainingExpirationTime<t)&&Vi(e,t)},ai),function(e){null===Si&&d("246"),Si.remainingExpirationTime=e}(e.current.expirationTime)}return null}function mi(e,t){var n;e:{for(ti&&!ui&&d("263"),n=e.return;null!==n;){switch(n.tag){case 2:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromCatch||"function"==typeof r.componentDidCatch&&(null===ci||!ci.has(r))){zo(n,e=Xa(n,e=Yo(t,e),1),1),yi(n,1),n=void 0;break e}break;case 3:zo(n,e=Ya(n,e=Yo(t,e),1),1),yi(n,1),n=void 0;break e}n=n.return}3===e.tag&&(zo(e,n=Ya(e,n=Yo(t,e),1),1),yi(e,1)),n=void 0}return n}function vi(){var e=2+25*(1+((bi()-2+500)/25|0));return e<=Ja&&(e=Ja+1),Ja=e}function gi(e,t){return e=0!==ei?ei:ti?ui?1:oi:1&t.mode?Ii?2+10*(1+((e-2+15)/10|0)):2+25*(1+((e-2+500)/25|0)):1,Ii&&(0===Oi||e>Oi)&&(Oi=e),e}function yi(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!ti&&0!==oi&&t<oi&&fi();var r=n.current.expirationTime;ti&&!ui&&ri===n||Vi(n,r),zi>Di&&d("185")}e=e.return}}function bi(){return Za=Jr()-Ka,Ga=2+(Za/10|0)}function wi(e){var t=ei;ei=2+25*(1+((bi()-2+500)/25|0));try{return e()}finally{ei=t}}function xi(e,t,n,r,o){var a=ei;ei=1;try{return e(t,n,r,o)}finally{ei=a}}var Ei=null,ki=null,Ci=0,_i=void 0,Ti=!1,Si=null,Pi=0,Oi=0,Ni=!1,Mi=!1,Ri=null,ji=null,Li=!1,Ui=!1,Ii=!1,Fi=null,Di=1e3,zi=0,Ai=1;function Bi(e){if(0!==Ci){if(e>Ci)return;null!==_i&&to(_i)}var t=Jr()-Ka;Ci=e,_i=eo(Hi,{timeout:10*(e-2)-t})}function Vi(e,t){if(null===e.nextScheduledRoot)e.remainingExpirationTime=t,null===ki?(Ei=ki=e,e.nextScheduledRoot=e):(ki=ki.nextScheduledRoot=e).nextScheduledRoot=Ei;else{var n=e.remainingExpirationTime;(0===n||t<n)&&(e.remainingExpirationTime=t)}Ti||(Li?Ui&&(Si=e,Pi=1,Qi(e,1,!1)):1===t?$i():Bi(t))}function Wi(){var e=0,t=null;if(null!==ki)for(var n=ki,r=Ei;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===ki)&&d("244"),r===r.nextScheduledRoot){Ei=ki=r.nextScheduledRoot=null;break}if(r===Ei)Ei=o=r.nextScheduledRoot,ki.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===ki){(ki=n).nextScheduledRoot=Ei,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===ki)break;n=r,r=r.nextScheduledRoot}}null!==(n=Si)&&n===t&&1===e?zi++:zi=0,Si=t,Pi=e}function Hi(e){Yi(0,!0,e)}function $i(){Yi(1,!1,null)}function Yi(e,t,n){if(ji=n,Wi(),t)for(;null!==Si&&0!==Pi&&(0===e||e>=Pi)&&(!Ni||bi()>=Pi);)bi(),Qi(Si,Pi,!Ni),Wi();else for(;null!==Si&&0!==Pi&&(0===e||e>=Pi);)Qi(Si,Pi,!1),Wi();null!==ji&&(Ci=0,_i=null),0!==Pi&&Bi(Pi),ji=null,Ni=!1,qi()}function Xi(e,t){Ti&&d("253"),Si=e,Pi=t,Qi(e,t,!1),$i(),qi()}function qi(){if(zi=0,null!==Fi){var e=Fi;Fi=null;for(var t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){Mi||(Mi=!0,Ri=e)}}}if(Mi)throw e=Ri,Ri=null,Mi=!1,e}function Qi(e,t,n){Ti&&d("245"),Ti=!0,n?null!==(n=e.finishedWork)?Ki(e,n,t):null!==(n=hi(e,t,!0))&&(Gi()?e.finishedWork=n:Ki(e,n,t)):null!==(n=e.finishedWork)?Ki(e,n,t):null!==(n=hi(e,t,!1))&&Ki(e,n,t),Ti=!1}function Ki(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime<=n&&(null===Fi?Fi=[r]:Fi.push(r),r._defer))return e.finishedWork=t,void(e.remainingExpirationTime=0);if(e.finishedWork=null,ui=ti=!0,(n=t.stateNode).current===t&&d("177"),0===(r=n.pendingCommitExpirationTime)&&d("261"),n.pendingCommitExpirationTime=0,bi(),at.current=null,1<t.effectTag)if(null!==t.lastEffect){t.lastEffect.nextEffect=t;var o=t.firstEffect}else o=t;else o=t.firstEffect;Qr=Nn;var a=u();if(Wn(a)){if("selectionStart"in a)var i={start:a.selectionStart,end:a.selectionEnd};else e:{var l=window.getSelection&&window.getSelection();if(l&&0!==l.rangeCount){i=l.anchorNode;var s=l.anchorOffset,f=l.focusNode;l=l.focusOffset;try{i.nodeType,f.nodeType}catch(e){i=null;break e}var p=0,h=-1,m=-1,v=0,g=0,y=a,b=null;t:for(;;){for(var w;y!==i||0!==s&&3!==y.nodeType||(h=p+s),y!==f||0!==l&&3!==y.nodeType||(m=p+l),3===y.nodeType&&(p+=y.nodeValue.length),null!==(w=y.firstChild);)b=y,y=w;for(;;){if(y===a)break t;if(b===i&&++v===s&&(h=p),b===f&&++g===l&&(m=p),null!==(w=y.nextSibling))break;b=(y=b).parentNode}y=w}i=-1===h||-1===m?null:{start:h,end:m}}else i=null}i=i||{start:0,end:0}}else i=null;for(Kr={focusedElem:a,selectionRange:i},Mn(!1),li=o;null!==li;){a=!1,i=void 0;try{for(;null!==li;){if(256&li.effectTag){var x=li.alternate;switch((s=li).tag){case 2:if(256&s.effectTag&&null!==x){var E=x.memoizedProps,k=x.memoizedState,C=s.stateNode;C.props=s.memoizedProps,C.state=s.memoizedState;var _=C.getSnapshotBeforeUpdate(E,k);C.__reactInternalSnapshotBeforeUpdate=_}break;case 3:case 5:case 6:case 4:break;default:d("163")}}li=li.nextEffect}}catch(e){a=!0,i=e}a&&(null===li&&d("178"),mi(li,i),null!==li&&(li=li.nextEffect))}for(li=o;null!==li;){x=!1,E=void 0;try{for(;null!==li;){var T=li.effectTag;if(16&T&&Rr(li.stateNode,""),128&T){var S=li.alternate;if(null!==S){var P=S.ref;null!==P&&("function"==typeof P?P(null):P.current=null)}}switch(14&T){case 2:Wa(li),li.effectTag&=-3;break;case 6:Wa(li),li.effectTag&=-3,$a(li.alternate,li);break;case 4:$a(li.alternate,li);break;case 8:Ha(k=li),k.return=null,k.child=null,k.alternate&&(k.alternate.child=null,k.alternate.return=null)}li=li.nextEffect}}catch(e){x=!0,E=e}x&&(null===li&&d("178"),mi(li,E),null!==li&&(li=li.nextEffect))}if(P=Kr,S=u(),T=P.focusedElem,x=P.selectionRange,S!==T&&c(document.documentElement,T)){null!==x&&Wn(T)&&(S=x.start,void 0===(P=x.end)&&(P=S),"selectionStart"in T?(T.selectionStart=S,T.selectionEnd=Math.min(P,T.value.length)):window.getSelection&&(S=window.getSelection(),E=T[he()].length,P=Math.min(x.start,E),x=void 0===x.end?P:Math.min(x.end,E),!S.extend&&P>x&&(E=x,x=P,P=E),E=Vn(T,P),k=Vn(T,x),E&&k&&(1!==S.rangeCount||S.anchorNode!==E.node||S.anchorOffset!==E.offset||S.focusNode!==k.node||S.focusOffset!==k.offset)&&((C=document.createRange()).setStart(E.node,E.offset),S.removeAllRanges(),P>x?(S.addRange(C),S.extend(k.node,k.offset)):(C.setEnd(k.node,k.offset),S.addRange(C))))),S=[];for(P=T;P=P.parentNode;)1===P.nodeType&&S.push({element:P,left:P.scrollLeft,top:P.scrollTop});for("function"==typeof T.focus&&T.focus(),T=0;T<S.length;T++)(P=S[T]).element.scrollLeft=P.left,P.element.scrollTop=P.top}for(Kr=null,Mn(Qr),Qr=null,n.current=t,li=o;null!==li;){o=!1,T=void 0;try{for(S=r;null!==li;){var O=li.effectTag;if(36&O){var N=li.alternate;switch(x=S,(P=li).tag){case 2:var M=P.stateNode;if(4&P.effectTag)if(null===N)M.props=P.memoizedProps,M.state=P.memoizedState,M.componentDidMount();else{var R=N.memoizedProps,j=N.memoizedState;M.props=P.memoizedProps,M.state=P.memoizedState,M.componentDidUpdate(R,j,M.__reactInternalSnapshotBeforeUpdate)}var L=P.updateQueue;null!==L&&(M.props=P.memoizedProps,M.state=P.memoizedState,$o(P,L,M));break;case 3:var U=P.updateQueue;if(null!==U){if(E=null,null!==P.child)switch(P.child.tag){case 5:E=P.child.stateNode;break;case 2:E=P.child.stateNode}$o(P,U,E)}break;case 5:var I=P.stateNode;null===N&&4&P.effectTag&&Gr(P.type,P.memoizedProps)&&I.focus();break;case 6:case 4:case 15:case 16:break;default:d("163")}}if(128&O){P=void 0;var F=li.ref;if(null!==F){var D=li.stateNode;switch(li.tag){case 5:P=D;break;default:P=D}"function"==typeof F?F(P):F.current=P}}var z=li.nextEffect;li.nextEffect=null,li=z}}catch(e){o=!0,T=e}o&&(null===li&&d("178"),mi(li,T),null!==li&&(li=li.nextEffect))}ti=ui=!1,Ro(t.stateNode),0===(t=n.current.expirationTime)&&(ci=null),e.remainingExpirationTime=t}function Gi(){return!(null===ji||ji.timeRemaining()>Ai)&&(Ni=!0)}function Zi(e){null===Si&&d("246"),Si.remainingExpirationTime=0,Mi||(Mi=!0,Ri=e)}function Ji(e,t){var n=Li;Li=!0;try{return e(t)}finally{(Li=n)||Ti||$i()}}function el(e,t){if(Li&&!Ui){Ui=!0;try{return e(t)}finally{Ui=!1}}return e(t)}function tl(e,t){Ti&&d("187");var n=Li;Li=!0;try{return xi(e,t)}finally{Li=n,$i()}}function nl(e,t,n){if(Ii)return e(t,n);Li||Ti||0===Oi||(Yi(Oi,!1,null),Oi=0);var r=Ii,o=Li;Li=Ii=!0;try{return e(t,n)}finally{Ii=r,(Li=o)||Ti||$i()}}function rl(e){var t=Li;Li=!0;try{xi(e)}finally{(Li=t)||Ti||Yi(1,!1,null)}}function ol(e,t,n,r,o){var a=t.current;if(n){var i;n=n._reactInternalFiber;e:{for(2===ln(n)&&2===n.tag||d("170"),i=n;3!==i.tag;){if(mo(i)){i=i.stateNode.__reactInternalMemoizedMergedChildContext;break e}(i=i.return)||d("171")}i=i.stateNode.context}n=mo(n)?bo(n,i):i}else n=f;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Fo(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),zo(a,o,r),yi(a,r),r}function al(e){var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?d("188"):d("268",Object.keys(e))),null===(e=cn(t))?null:e.stateNode}function il(e,t,n,r){var o=t.current;return ol(e,t,n,o=gi(bi(),o),r)}function ll(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function ul(e){var t=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Oo=Mo(function(e){return t.onCommitFiberRoot(n,e)}),No=Mo(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(i({},e,{findHostInstanceByFiber:function(e){return null===(e=cn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}var sl=Ji,cl=nl,fl=function(){Ti||0===Oi||(Yi(Oi,!1,null),Oi=0)};function dl(e){this._expirationTime=vi(),this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function pl(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function hl(e,t,n){this._internalRoot=Po(e,t,n)}function ml(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function vl(e,t,n,r,o){ml(n)||d("200");var a=n._reactRootContainer;if(a){if("function"==typeof o){var i=o;o=function(){var e=ll(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new hl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=ll(a._internalRoot);l.call(e)}}el(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return ll(a._internalRoot)}function gl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return ml(t)||d("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ut,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}ze.injectFiberControlledHostComponent(qr),dl.prototype.render=function(e){this._defer||d("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new pl;return ol(e,t,null,n,r._onCommit),r},dl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},dl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||d("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&d("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Xi(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},dl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},pl.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},pl.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&d("191",n),n()}}},hl.prototype.render=function(e,t){var n=this._internalRoot,r=new pl;return null!==(t=void 0===t?null:t)&&r.then(t),il(e,n,null,r._onCommit),r},hl.prototype.unmount=function(e){var t=this._internalRoot,n=new pl;return null!==(e=void 0===e?null:e)&&n.then(e),il(null,t,null,n._onCommit),n},hl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new pl;return null!==(n=void 0===n?null:n)&&o.then(n),il(t,r,e,o._onCommit),o},hl.prototype.createBatch=function(){var e=new dl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Xe=sl,qe=cl,Qe=fl;var yl={createPortal:gl,findDOMNode:function(e){return null==e?null:1===e.nodeType?e:al(e)},hydrate:function(e,t,n){return vl(null,e,t,!0,n)},render:function(e,t,n){return vl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&d("38"),vl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return ml(e)||d("40"),!!e._reactRootContainer&&(el(function(){vl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return gl.apply(void 0,arguments)},unstable_batchedUpdates:Ji,unstable_deferredUpdates:wi,unstable_interactiveUpdates:nl,flushSync:tl,unstable_flushControlled:rl,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:z,EventPluginRegistry:C,EventPropagators:ne,ReactControlledComponent:Ye,ReactDOMComponentTree:Y,ReactDOMEventListener:In},unstable_createRoot:function(e,t){return new hl(e,!0,null!=t&&!0===t.hydrate)}};ul({findFiberByHostInstance:W,bundleType:0,version:"16.4.2",rendererPackageName:"react-dom"});var bl={default:yl},wl=bl&&yl||bl;e.exports=wl.default?wl.default:wl},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(var i=0;i<n.length;i++)if(!r.call(t,n[i])||!o(e[n[i]],t[n[i]]))return!1;return!0}},function(e,t,n){"use strict";var r=n(17);e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},function(e,t,n){"use strict";var r=n(18);e.exports=function(e){return r(e)&&3==e.nodeType}},function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},function(e,t,n){var r=n(20);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(22)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(21)(!1)).push([e.i,".columns.is-fullwidth {\n  flex-grow: 1;\n  width: 100%;\n}\n\n.is-fullview {\n  width: 100%;\n  height: 100%;\n}\n\n.hero-body {\n  padding: 1rem;\n}\n\n.is-disabled {\n  opacity: 0.5;\n}\n\n.is-vertical {\n  flex-direction: column;\n}\n\n.is-hidden {\n  display: none;\n}\n\n.bg-checkerboard {\n  background-color: #ddd;\n  background-image: linear-gradient(45deg, #bbb 25%, transparent 25%),\n    linear-gradient(-45deg, #bbb 25%, transparent 25%),\n    linear-gradient(45deg, transparent 75%, #bbb 75%),\n    linear-gradient(-45deg, transparent 75%, #bbb 75%);\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n}\n\n.field-label label {\n  width: 120px;\n}\n\n.pixel-grid {\n}\n.pixel-row {\n  display: table-row;\n}\n.pixel-cell {\n  display: table-cell;\n  width: 10px;\n  height: 10px;\n  border: 1px solid black;\n  user-select: none;\n  pointer-events: none;\n}\n.pixel-solid {\n  border-width: 2px;\n  border-top-color: rgba(255, 255, 255, 0.5);\n  border-left-color: rgba(255, 255, 255, 0.5);\n  border-right-color: rgba(0, 0, 0, 0.5);\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n",""])},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([o]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];"number"==typeof a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];"number"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){var r={},o=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),a=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),i=null,l=0,u=[],s=n(23);function c(e,t){for(var n=0;n<e.length;n++){var o=e[n],a=r[o.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](o.parts[i]);for(;i<o.parts.length;i++)a.parts.push(v(o.parts[i],t))}else{var l=[];for(i=0;i<o.parts.length;i++)l.push(v(o.parts[i],t));r[o.id]={id:o.id,refs:1,parts:l}}}}function f(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],l={css:a[1],media:a[2],sourceMap:a[3]};r[i]?r[i].parts.push(l):n.push(r[i]={id:i,parts:[l]})}return n}function d(e,t){var n=a(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=u[u.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),u.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=a(e.insertAt.before,n);n.insertBefore(t,o)}}function p(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=u.indexOf(e);t>=0&&u.splice(t,1)}function h(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return m(t,e.attrs),d(e,t),t}function m(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function v(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a=t.transform(e.css)))return function(){};e.css=a}if(t.singleton){var u=l++;n=i||(i=h(t)),r=y.bind(null,n,u,!1),o=y.bind(null,n,u,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",m(t,e.attrs),d(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=s(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){p(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){p(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=o()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return c(n,t),function(e){for(var o=[],a=0;a<n.length;a++){var i=n[a];(l=r[i.id]).refs--,o.push(l)}e&&c(f(e,t),t);for(a=0;a<o.length;a++){var l;if(0===(l=o[a]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete r[l.id]}}}};var g=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function y(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=g(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(25);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return function(e){return e&&e.__esModule?e:{default:e}}(r).default}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=c(n(0)),a=c(n(26)),i=c(n(27)),l=c(n(46)),u=c(n(7)),s=c(n(47));function c(e){return e&&e.__esModule?e:{default:e}}var f=n(1).setSeed,d=function(e){return e},p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleStateChange=function(e){if(n.ready){f(e.seed);var t=[{name:"randomize"},e.outline&&{name:"outline"},e.mirrorX&&{name:"mirrorx"},e.mirrorY&&{name:"mirrory"}].filter(d),r=new u.default({width:e.cols,height:e.rows,data:e.pixels},t),o=e.padding,a=e.zoom,i=n.canvas.current.getBoundingClientRect(),l=i.width,c=i.height;n.canvas.current.width=l,n.canvas.current.height=c;var p=n.canvas.current.getContext("2d"),h=e.cols*a+2*o,m=e.rows*a+2*o,v=Math.ceil(l/h),g=Math.ceil(c/m),y=e.backgroundColorEnabled?e.backgroundColor:"rgba(0,0,0,0)",b={0:!1,1:e.foregroundColor,2:e.detailsColor,3:e.outline&&e.outlineColor},w=new s.default({rows:g,cols:v,padding:o,pixelSize:a,backgroundColor:y,pallette:b});w.render(r),p.drawImage(w.canvas,0,0,w.canvas.width,w.canvas.height)}else n.pendingStateChange=e},n.canvas=o.default.createRef(),n.events=new a.default,n.events.on("state",n.handleStateChange),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),r(t,[{key:"componentDidMount",value:function(){this.ready=!0,this.pendingStateChange&&(this.handleStateChange(this.pendingStateChange),delete this.pendingStateChange)}},{key:"render",value:function(){return o.default.createElement("div",{className:"columns is-fullwidth"},o.default.createElement("div",{className:"column is-narrow"},o.default.createElement(i.default,{events:this.events})),o.default.createElement("div",{className:"column"},o.default.createElement(l.default,{className:"bg-checkerboard",events:this.events,ref:this.canvas})))}}]),t}();t.default=p},function(e,t){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function r(e){return"function"==typeof e}function o(e){return"object"==typeof e&&null!==e}function a(e){return void 0===e}e.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(e){if(!function(e){return"number"==typeof e}(e)||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},n.prototype.emit=function(e){var t,n,i,l,u,s;if(this._events||(this._events={}),"error"===e&&(!this._events.error||o(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var c=new Error('Uncaught, unspecified "error" event. ('+t+")");throw c.context=t,c}if(a(n=this._events[e]))return!1;if(r(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:l=Array.prototype.slice.call(arguments,1),n.apply(this,l)}else if(o(n))for(l=Array.prototype.slice.call(arguments,1),i=(s=n.slice()).length,u=0;u<i;u++)s[u].apply(this,l);return!0},n.prototype.addListener=function(e,t){var i;if(!r(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,r(t.listener)?t.listener:t),this._events[e]?o(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,o(this._events[e])&&!this._events[e].warned&&(i=a(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&i>0&&this._events[e].length>i&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(e,t){if(!r(t))throw TypeError("listener must be a function");var n=!1;function o(){this.removeListener(e,o),n||(n=!0,t.apply(this,arguments))}return o.listener=t,this.on(e,o),this},n.prototype.removeListener=function(e,t){var n,a,i,l;if(!r(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(i=(n=this._events[e]).length,a=-1,n===t||r(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(o(n)){for(l=i;l-- >0;)if(n[l]===t||n[l].listener&&n[l].listener===t){a=l;break}if(a<0)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(a,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},n.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(r(n=this._events[e]))this.removeListener(e,n);else if(n)for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},n.prototype.listeners=function(e){return this._events&&this._events[e]?r(this._events[e])?[this._events[e]]:this._events[e].slice():[]},n.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(r(t))return 1;if(t)return t.length}return 0},n.listenerCount=function(e,t){return e.listenerCount(t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=p(n(0)),a=p(n(28)),i=p(n(29)),l=p(n(32)),u=p(n(33)),s=p(n(36)),c=p(n(37)),f=p(n(7)),d=n(8);function p(e){return e&&e.__esModule?e:{default:e}}function h(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.toggleState=function(e){n.setState(h({},e,!n.state[e]))},n.setTemplate=function(e,t){var r,o=f.default.templates[e],a=o.width,i=o.height,l=o.data,u=o.options,s=u.mirrorX,c=u.mirrorY,d=u.padding,p=void 0===d?10:d,m=u.zoom,v=void 0===m?10:m,g=u.outline,y=void 0===g?n.state.outline:g,b=u.outlineColor,w=void 0===b?n.state.outlineColor:b,x=u.foregroundColor,E=void 0===x?n.state.foregroundColor:x,k=u.detailsColor,C=void 0===k?n.state.detailsColor:k;n.setState((h(r={template:e,rows:i,cols:a,pixels:l,seed:"1337",zoom:v,padding:p,outline:y,mirrorX:s,mirrorY:c},"outline",y),h(r,"outlineColor",w),h(r,"foregroundColor",E),h(r,"detailsColor",C),h(r,"backgroundColor","#777777"),h(r,"backgroundColorEnabled",!0),r),t&&n.handleStateChange)},n.handleChange=function(e){var t=e.target.name,r=e.target.type,o=e.target.value;if("cols"!=t&&"rows"!=t)"template"!=t?"number"==r?n.updateState(h({},t,parseInt(o))):"color"==r||"text"==r||"hidden"==r?n.updateState(h({},t,o)):"checkbox"==r&&n.updateState(h({},t,e.target.checked)):n.setTemplate(o,!0);else{for(var a=n.state,i=a.rows,l=a.cols,u=a.pixels,s="rows"===t?parseInt(o):i,c="cols"===t?parseInt(o):l,f=Array(c*s).fill(0),d=0;d<i;d++)for(var p=0;p<l;p++)p<c&&d<s&&(f[d*c+p]=u[d*l+p]||0);n.updateState({rows:s,cols:c,pixels:f})}},n.updateState=function(e){n.setState(e,n.handleStateChange)},n.handleStateChange=function(){n.props.events&&n.props.events.emit("state",n.state)},n.resetPixelGrid=function(){var e=n.state,t=e.cols,r=e.rows,o=Array(t*r).fill(0);n.updateState({pixels:o,template:"none"})},n.deleteTemplate=function(){confirm("Are you sure that you want to delete template "+n.state.template+"?")&&((0,d.deleteTemplate)(n.state.template),n.updateState({template:"none"}))},n.saveTemplate=function(){var e=prompt("Please enter the name for the current template",n.state.template);if(e){var t=n.state,r=t.cols,o=t.rows,a=t.pixels,i=t.mirrorX,l=t.mirrorY,u=t.outline,s=t.outlineColor,c=t.foregroundColor,f=t.detailsColor;(0,d.saveTemplate)(e,{width:r,height:o,data:a,options:{mirrorX:i,mirrorY:l,outline:u,outlineColor:s,foregroundColor:c,detailsColor:f}}),n.updateState({template:e})}},n.state={template:"robot",rows:5,cols:5,pixels:Array(25).fill(0),seed:"1337",zoom:10,padding:0,mirrorX:!1,mirrorY:!1,backgroundColor:"#777777",foregroundColor:"#FFFFFF",detailsColor:"#333333",outline:!1,outlineColor:"#000000",backgroundColorEnabled:!0,showPixelGridHelp:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),r(t,[{key:"componentDidMount",value:function(){this.setTemplate(this.state.template,!0)}},{key:"render",value:function(){var e=this;return o.default.createElement(o.default.Fragment,null,o.default.createElement(a.default,{title:"Options"},o.default.createElement(c.default,{disabled:!this.state.backgroundColorEnabled},o.default.createElement(c.default.Label,null,o.default.createElement("input",{name:"backgroundColorEnabled",type:"checkbox",checked:this.state.backgroundColorEnabled,onChange:this.handleChange}),"Background:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"backgroundColor",type:"color",value:this.state.backgroundColor,disabled:!this.state.backgroundColorEnabled,onChange:this.handleChange}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,"Zoom:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"zoom",type:"number",step:"1",min:"1",max:"20",value:this.state.zoom,onChange:this.handleChange}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,"Padding:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"padding",type:"number",step:"1",min:"0",max:"50",value:this.state.padding,onChange:this.handleChange}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,"Random Seed:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"seed",type:"text",value:this.state.seed,onChange:this.handleChange})))),o.default.createElement(a.default,{title:"Template"},o.default.createElement(c.default,{disabled:!this.state.outline},o.default.createElement(c.default.Label,null,o.default.createElement("input",{name:"outline",type:"checkbox",checked:this.state.outline,onChange:this.handleChange}),"Outline:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"outlineColor",type:"color",value:this.state.outlineColor,disabled:!this.state.outline,onChange:this.handleChange}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,"Foreground:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"foregroundColor",type:"color",value:this.state.foregroundColor,onChange:this.handleChange}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,"Accent:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"detailsColor",type:"color",value:this.state.detailsColor,onChange:this.handleChange}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,"Width:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"cols",type:"number",step:"1",min:"1",max:"30",value:this.state.cols,onChange:this.handleChange}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,"Height:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"rows",type:"number",step:"1",min:"1",max:"50",value:this.state.rows,onChange:this.handleChange}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,"MirrorX:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"mirrorX",type:"checkbox",checked:this.state.mirrorX,onChange:this.handleChange}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,"MirrorY:"),o.default.createElement(c.default.Control,null,o.default.createElement(i.default,{name:"mirrorY",type:"checkbox",checked:this.state.mirrorY,onChange:this.handleChange}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,"Template:"),o.default.createElement(c.default.Control,null,o.default.createElement(l.default,{onChange:this.handleChange,name:"template",value:this.state.template,items:Object.keys(f.default.templates).map(function(e){return{name:e,value:e}})}),o.default.createElement(s.default,{onClick:this.deleteTemplate},"Delete"))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null,o.default.createElement("span",{className:"icon has-text-info",onClick:function(){return e.toggleState("showPixelGridHelp")}},o.default.createElement("i",{className:"fas fa-question-circle"}))),o.default.createElement(c.default.Control,null,o.default.createElement(u.default,{rows:this.state.rows,cols:this.state.cols,pixels:this.state.pixels,mirrorX:this.state.mirrorX,mirrorY:this.state.mirrorY,onChange:this.updateState}))),o.default.createElement(c.default,null,o.default.createElement(c.default.Label,null),o.default.createElement(c.default.Control,null,o.default.createElement(s.default,{onClick:this.resetPixelGrid},"Reset"),o.default.createElement(s.default,{onClick:this.saveTemplate},"Save")))),o.default.createElement("div",{className:["modal",this.state.showPixelGridHelp?"is-active":""].join(" ")},o.default.createElement("div",{className:"modal-background",onClick:function(){return e.toggleState("showPixelGridHelp")}}),o.default.createElement("div",{className:"modal-content"},o.default.createElement("article",{className:"message is-primary"},o.default.createElement("div",{className:"message-header"},o.default.createElement("p",null,"Editing The Template"),o.default.createElement("button",{className:"delete","aria-label":"delete",onClick:function(){return e.toggleState("showPixelGridHelp")}})),o.default.createElement("div",{className:"message-body"},o.default.createElement("p",{className:"content"},"Use your mouse to edit the generator template."),o.default.createElement("p",{className:"content"},"Left-clicking the squares will cycle them through 3 different states:",o.default.createElement("ul",null,o.default.createElement("li",null,"transparent pixel"),o.default.createElement("li",null,"foreground pixel (has a 50% of becoming a transparent pixel)"),o.default.createElement("li",null,"accent pixel (has a 50% chance of turning into foreground pixel)"))),o.default.createElement("p",{className:"content"},"Right-clicking a pixel will disable its randomness and will make it always be the state that you specified."),o.default.createElement("p",{className:"content"},"Middle-clicking on the pixel grid and dragging will allow you to move the whole pattern. This is pretty handy when you resize the template and want to re-position it."))))))}}]),t}();t.default=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));t.default=function(e){return r.default.createElement("div",{className:"panel"},e.title&&r.default.createElement("p",{className:"panel-heading"},e.title),r.default.createElement("div",{class:"panel-block"},r.default.createElement("div",null,e.children)))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=l(n(0)),i=l(n(6));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.default.Component),o(t,[{key:"render",value:function(){var e=this.props,t=e.className,n=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["className"]);return a.default.createElement("input",r({className:[" text number password ".indexOf(n.type)>=0?"input":"",t].join(" ")},n))}}]),t}();u.propTypes={name:i.default.string.isRequired,label:i.default.string.isRequired,type:i.default.string,step:i.default.string,min:i.default.string,max:i.default.string,value:i.default.oneOfType([i.default.string,i.default.number]),onChange:i.default.func},t.default=u},function(e,t,n){"use strict";var r=n(31);function o(){}e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=i(n(0)),a=i(n(6));function i(e){return e&&e.__esModule?e:{default:e}}var l=function(e,t){var n=Object.getOwnPropertyDescriptor(e,"value").set,r=Object.getPrototypeOf(e),o=Object.getOwnPropertyDescriptor(r,"value").set;n&&n!==o?o.call(e,t):n.call(e,t)},u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleSelect=function(e){var t=n.ref.current,r=e.target.getAttribute("data-value");l(t,r),n.setState({value:r}),t.dispatchEvent(new Event("change",{bubbles:!0})),n.close()},n.close=function(){n.setState({isOpen:!1})},n.toggle=function(){n.setState({isOpen:!n.state.isOpen})},n.ref=o.default.createRef(),n.state={isOpen:!1,value:e.value},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),r(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.items,r=t.name,a=t.onChange;return o.default.createElement("div",{className:["dropdown",this.state.isOpen&&"is-active"].join(" ")},o.default.createElement("div",{className:"dropdown-trigger"},o.default.createElement("button",{className:"button",onClick:this.toggle,"aria-haspopup":"true","aria-controls":"dropdown-menu"},o.default.createElement("span",null,this.state.value," ▾"))),o.default.createElement("div",{className:"dropdown-menu",role:"menu"},o.default.createElement("div",{className:"dropdown-content"},n.map(function(t){var n=t.name,r=t.value;return o.default.createElement("a",{href:"#",className:"dropdown-item","data-value":r,onClick:e.handleSelect},n)}))),o.default.createElement("input",{type:"text",className:"is-hidden",name:r,value:this.state.value,onChange:a,ref:this.ref}))}}],[{key:"getDerivedStateFromProps",value:function(e,t){if(e.value!==t.value)return{value:e.value}}}]),t}();u.propTypes={name:a.default.string.isRequired,value:a.default.oneOfType([a.default.string,a.default.number]),items:a.default.shape({name:a.default.string.isRequired,value:a.default.oneOfType([a.default.string,a.default.number]).isRequired}),onChange:a.default.func},t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(1);function l(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var u=0,s=1,c=2,f=10,d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleMouseDown=function(e){n.mouseDown={button:e.button,x:e.clientX,y:e.clientY},n.dragging=!0,e.button==s&&(n.dragPixels=[].concat(l(n.props.pixels)))},n.handleMouseMove=function(e){var t=n.props,r=t.rows,o=t.cols,a=t.mirrorX,i=t.mirrorY,c=t.pixels,d=n.ref.current.getBoundingClientRect(),p=Math.floor((e.clientX-d.left)/f),h=Math.floor((e.clientY-d.top)/f);if(a&&(p%=o>>1),i&&(h%=r>>1),n.dragging)if(n.mouseDown.button==s){var m=e.clientX-n.mouseDown.x,v=e.clientY-n.mouseDown.y;if(m*m+v*v<f)return;for(var g=m>>3,y=v>>3,b=[].concat(l(n.dragPixels)),w=0;w<r;w++)for(var x=0;x<o;x++)b[(w+r+y)%r*o+(x+o+g)%o]=n.dragPixels[w*o+x];n.onChange({pixels:b})}else if(n.mouseDown.button==u){var E=h*o+p;void 0===n.mouseDown.value&&(n.mouseDown.value=c[E]),c[E]=n.mouseDown.value,n.onChange({pixels:c})}},n.handleMouseUp=function(e){var t=e.target.getBoundingClientRect(),r=Math.floor((e.clientX-t.left)/f),o=Math.floor((e.clientY-t.top)/f);if(n.mouseDown)switch(n.mouseDown.button){case c:n.setPixel(r,o,-1*n.getPixel(r,o));break;case u:var a=Math.floor((n.mouseDown.x-t.left)/f),i=Math.floor((n.mouseDown.y-t.top)/f);r==a&&o==i&&n.incrementPixel(r,o)}n.handleMouseDone(e)},n.handleMouseDone=function(e){n.dragging=!1,n.dragPixels=!1},n.getPixel=function(e,t){var r=n.props,o=r.cols,a=r.rows,i=r.mirrorX,l=r.mirrorY;return r.pixels[(l&&t>=a>>1?a-1-t:t)*o+(i&&e>=o>>1?o-1-e:e)]},n.setPixel=function(e,t,r){var o=n.props,a=o.cols,i=o.rows,u=o.mirrorX,s=o.mirrorY,c=o.pixels;c[(s&&t>=i>>1?i-1-t:t)*a+(u&&e>=a>>1?a-1-e:e)]=r,n.onChange({pixels:[].concat(l(c))})},n.onChange=function(e){n.props.onChange&&n.props.onChange(e)},n.ref=a.default.createRef(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.default.Component),o(t,[{key:"componentDidMount",value:function(){this.ref.current.addEventListener("contextmenu",function(e){return e.preventDefault()||!1}),document.addEventListener("mouseup",this.handleMouseDone)}},{key:"componentWillUnmount",value:function(){document.removeEventListener("mouseup",this.handleMouseDone)}},{key:"render",value:function(){var e=this.props,t=e.cols,n=e.rows,o=e.pixels,l=e.mirrorX,u=e.mirrorY,s=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["cols","rows","pixels","mirrorX","mirrorY"]),c=["white","gray","black"];return a.default.createElement("div",r({ref:this.ref,className:"pixel-grid",onMouseDown:this.handleMouseDown,onMouseUp:this.handleMouseUp,onMouseMove:this.handleMouseMove},s),Array(n).fill(0).map(function(e,r){return a.default.createElement("div",{className:"pixel-row"},Array(t).fill(0).map(function(e,s){var f=o[(u&&r>=n>>1?n-r-1:r)*t+(l&&s>=t>>1?t-s-1:s)];return a.default.createElement("div",{className:"pixel-cell"+((0,i.isNegative)(f)?" pixel-solid":""),style:{backgroundColor:c[Math.abs(f)%c.length]}})}))}))}},{key:"incrementPixel",value:function(e,t){var n=this.getPixel(e,t);this.setPixel(e,t,(n+1)%3)}}]),t}();t.default=d},function(e,t,n){var r;!function(o){"use strict";var a="function"!=typeof Math.imul||-5!==Math.imul(4294967295,5)?function(e,t){var n=65535&e,r=65535&t;return n*r+((e>>>16&65535)*r+n*(t>>>16&65535)<<16>>>0)|0}:Math.imul,i="function"==typeof String.prototype.repeat&&"xxx"==="x".repeat(3)?function(e,t){return e.repeat(t)}:function(e,t){for(var n="";t>0;)1&t&&(n+=e),t>>=1,e+=e;return n};function l(e){if(!(this instanceof l))return new l(e);if(null==e)e=l.engines.nativeMath;else if("function"!=typeof e)throw new TypeError("Expected engine to be a function, got "+typeof e);this.engine=e}var u=l.prototype;function s(e){return function(){return e}}function c(e,t){return 0===t?e:function(n){return e(n)+t}}function f(e){var t=+e;return t<0?Math.ceil(t):Math.floor(t)}function d(e,t){return e<0?Math.max(e+t,0):Math.min(e,t)}function p(){}l.engines={nativeMath:function(){return 4294967296*Math.random()|0},mt19937:function(e){function t(e){for(var t=0,n=0;(0|t)<227;t=t+1|0)n=2147483648&e[t]|2147483647&e[t+1|0],e[t]=e[t+397|0]^n>>>1^(1&n?2567483615:0);for(;(0|t)<623;t=t+1|0)n=2147483648&e[t]|2147483647&e[t+1|0],e[t]=e[t-227|0]^n>>>1^(1&n?2567483615:0);n=2147483648&e[623]|2147483647&e[0],e[623]=e[396]^n>>>1^(1&n?2567483615:0)}return function(){var n=new e(624),r=0,o=0;function i(){(0|r)>=624&&(t(n),r=0);var e=n[r];return r=r+1|0,o+=1,0|function(e){return e^=e>>>11,e^=e<<7&2636928640,(e^=e<<15&4022730752)^e>>>18}(e)}return i.getUseCount=function(){return o},i.discard=function(e){for(o+=e,(0|r)>=624&&(t(n),r=0);e-r>624;)e-=624-r,t(n),r=0;return r=r+e|0,i},i.seed=function(e){var t=0;n[0]=t=0|e;for(var l=1;l<624;l=l+1|0)n[l]=t=a(t^t>>>30,1812433253)+l|0;return r=624,o=0,i},i.seedWithArray=function(e){return i.seed(19650218),function(e,t){for(var n=1,r=0,o=t.length,i=0|Math.max(o,624),l=0|e[0];(0|i)>0;--i)e[n]=l=(e[n]^a(l^l>>>30,1664525))+(0|t[r])+(0|r)|0,++r,(0|(n=n+1|0))>623&&(e[0]=e[623],n=1),r>=o&&(r=0);for(i=623;(0|i)>0;--i)e[n]=l=(e[n]^a(l^l>>>30,1566083941))-n|0,(0|(n=n+1|0))>623&&(e[0]=e[623],n=1);e[0]=2147483648}(n,e),i},i.autoSeed=function(){return i.seedWithArray(l.generateEntropyArray())},i}}("function"==typeof Int32Array?Int32Array:Array),browserCrypto:"undefined"!=typeof crypto&&"function"==typeof crypto.getRandomValues&&"function"==typeof Int32Array?function(){var e=null,t=128;return function(){return t>=128&&(null===e&&(e=new Int32Array(128)),crypto.getRandomValues(e),t=0),0|e[t++]}}():null},l.generateEntropyArray=function(){for(var e=[],t=l.engines.nativeMath,n=0;n<16;++n)e[n]=0|t();return e.push(0|(new Date).getTime()),e},l.int32=function(e){return 0|e()},u.int32=function(){return l.int32(this.engine)},l.uint32=function(e){return e()>>>0},u.uint32=function(){return l.uint32(this.engine)},l.uint53=function(e){return 4294967296*(2097151&e())+(e()>>>0)},u.uint53=function(){return l.uint53(this.engine)},l.uint53Full=function(e){for(;;){var t=0|e();if(!(2097152&t))return 4294967296*(2097151&t)+(e()>>>0);if(2097152==(4194303&t)&&0==(0|e()))return 9007199254740992}},u.uint53Full=function(){return l.uint53Full(this.engine)},l.int53=function(e){var t=0|e();return 4294967296*(2097151&t)+(e()>>>0)+(2097152&t?-9007199254740992:0)},u.int53=function(){return l.int53(this.engine)},l.int53Full=function(e){for(;;){var t=0|e();if(!(4194304&t))return 4294967296*(2097151&t)+(e()>>>0)+(2097152&t?-9007199254740992:0);if(4194304==(8388607&t)&&0==(0|e()))return 9007199254740992}},u.int53Full=function(){return l.int53Full(this.engine)},l.integer=function(){function e(e){return 0==(e+1&e)}function t(t){return e(t)?function(e){return function(t){return t()&e}}(t):function(e){var t=e+1,n=t*Math.floor(4294967296/t);return function(e){var r=0;do{r=e()>>>0}while(r>=n);return r%t}}(t)}function n(t){var n=t+1;if(function(e){return 0==(0|e)}(n)){var r=(n/4294967296|0)-1;if(e(r))return function(e){return function(t){return 4294967296*(t()&e)+(t()>>>0)}}(r)}return function(e){var t=e*Math.floor(9007199254740992/e);return function(n){var r=0;do{r=4294967296*(2097151&n())+(n()>>>0)}while(r>=t);return r%e}}(n)}function r(e,t){return function(n){var r=0;do{var o=0|n();r=4294967296*(2097151&o)+(n()>>>0)+(2097152&o?-9007199254740992:0)}while(r<e||r>t);return r}}return function(e,o){if(e=Math.floor(e),o=Math.floor(o),e<-9007199254740992||!isFinite(e))throw new RangeError("Expected min to be at least -9007199254740992");if(o>9007199254740992||!isFinite(o))throw new RangeError("Expected max to be at most 9007199254740992");var a=o-e;return a<=0||!isFinite(a)?s(e):4294967295===a?0===e?l.uint32:c(l.int32,e+2147483648):a<4294967295?c(t(a),e):9007199254740991===a?c(l.uint53,e):a<9007199254740991?c(n(a),e):o-1-e==9007199254740991?c(l.uint53Full,e):-9007199254740992===e&&9007199254740992===o?l.int53Full:-9007199254740992===e&&9007199254740991===o?l.int53:-9007199254740991===e&&9007199254740992===o?c(l.int53,1):9007199254740992===o?c(r(e-1,o-1),1):r(e,o)}}(),u.integer=function(e,t){return l.integer(e,t)(this.engine)},l.realZeroToOneInclusive=function(e){return l.uint53Full(e)/9007199254740992},u.realZeroToOneInclusive=function(){return l.realZeroToOneInclusive(this.engine)},l.realZeroToOneExclusive=function(e){return l.uint53(e)/9007199254740992},u.realZeroToOneExclusive=function(){return l.realZeroToOneExclusive(this.engine)},l.real=function(){return function(e,t,n){if(!isFinite(e))throw new RangeError("Expected left to be a finite number");if(!isFinite(t))throw new RangeError("Expected right to be a finite number");return c(function(e,t){return 1===t?e:0===t?function(){return 0}:function(n){return e(n)*t}}(n?l.realZeroToOneInclusive:l.realZeroToOneExclusive,t-e),e)}}(),u.real=function(e,t,n){return l.real(e,t,n)(this.engine)},l.bool=function(){function e(e){return 1==(1&e())}function t(e,t){return function(n){return e(n)<t}}return function(n,r){return null==r?null==n?e:function(e){if(e<=0)return s(!1);if(e>=1)return s(!0);var n=4294967296*e;return n%1==0?t(l.int32,n-2147483648|0):t(l.uint53,Math.round(9007199254740992*e))}(n):n<=0?s(!1):n>=r?s(!0):t(l.integer(0,r-1),n)}}(),u.bool=function(e,t){return l.bool(e,t)(this.engine)},l.pick=function(e,t,n,r){var o=t.length,a=null==n?0:d(f(n),o),i=void 0===r?o:d(f(r),o);if(!(a>=i))return t[l.integer(a,i-1)(e)]},u.pick=function(e,t,n){return l.pick(this.engine,e,t,n)};var h=Array.prototype.slice;l.picker=function(e,t,n){var r=h.call(e,t,n);if(!r.length)return p;var o=l.integer(0,r.length-1);return function(e){return r[o(e)]}},l.shuffle=function(e,t,n){var r=t.length;if(r){null==n&&(n=0);for(var o=r-1>>>0;o>n;--o){var a=l.integer(0,o)(e);if(o!==a){var i=t[o];t[o]=t[a],t[a]=i}}}return t},u.shuffle=function(e){return l.shuffle(this.engine,e)},l.sample=function(e,t,n){if(n<0||n>t.length||!isFinite(n))throw new RangeError("Expected sampleSize to be within 0 and the length of the population");if(0===n)return[];var r=h.call(t),o=r.length;if(o===n)return l.shuffle(e,r,0);var a=o-n;return l.shuffle(e,r,a-1).slice(a)},u.sample=function(e,t){return l.sample(this.engine,e,t)},l.die=function(e){return l.integer(1,e)},u.die=function(e){return l.die(e)(this.engine)},l.dice=function(e,t){var n=l.die(e);return function(e){var r=[];r.length=t;for(var o=0;o<t;++o)r[o]=n(e);return r}},u.dice=function(e,t){return l.dice(e,t)(this.engine)},l.uuid4=function(){function e(e,t){return i("0",t-e.length)+e}return function(t){var n=t()>>>0,r=0|t(),o=0|t(),a=t()>>>0;return e(n.toString(16),8)+"-"+e((65535&r).toString(16),4)+"-"+e((r>>4&4095|16384).toString(16),4)+"-"+e((16383&o|32768).toString(16),4)+"-"+e((o>>4&65535).toString(16),4)+e(a.toString(16),8)}}(),u.uuid4=function(){return l.uuid4(this.engine)},l.string=function(e){null==e&&(e="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-");var t=e.length;if(!t)throw new Error("Expected pool not to be an empty string");var n=l.integer(0,t-1);return function(t,r){for(var o="",a=0;a<r;++a){var i=n(t);o+=e.charAt(i)}return o}},u.string=function(e,t){return l.string(t)(this.engine,e)},l.hex=function(){var e=l.string("0123456789abcdef"),t=l.string("0123456789abcdef".toUpperCase());return function(n){return n?t:e}}(),u.hex=function(e,t){return l.hex(t)(this.engine,e)},l.date=function(e,t){if(!(e instanceof Date))throw new TypeError("Expected start to be a Date, got "+typeof e);if(!(t instanceof Date))throw new TypeError("Expected end to be a Date, got "+typeof t);var n=l.integer(e.getTime(),t.getTime());return function(e){return new Date(n(e))}},u.date=function(e,t){return l.date(e,t)(this.engine)},void 0===(r=function(){return l}.call(t,n,t,e))||(e.exports=r)}()},function(e,t,n){"use strict";e.exports=function(e){if(0===e.length)return 0;for(var t=0,n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(e){return e&&e.__esModule?e:{default:e}}(n(0));t.default=function(e){var t=e.children,n=e.className,a=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["children","className"]);return o.default.createElement("button",r({className:"button "+n},a),t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var a=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),r(t,[{key:"render",value:function(){var e=this.props;return o.default.createElement("div",{className:["field",e.isVertical?"is-vertical":"is-horizontal",e.disabled&&"is-disabled",e.className].join(" ")},e.children)}}]),t}();a.Label=function(e){return o.default.createElement("div",{className:"field-label is-normal"},o.default.createElement("label",{className:"label"},e.children))},a.Control=function(e){return o.default.createElement("div",{className:"field-body"},o.default.createElement("div",{className:"field"},o.default.createElement("p",{className:"control"},e.children)))},t.default=a},function(e,t,n){"use strict";e.exports={mirrorx:n(39),mirrory:n(40),outline:n(41),randomize:n(42)}},function(e,t,n){"use strict";e.exports=function(){for(var e=this.width,t=e>>1,n=this.height,r=0;r<n;r++)for(var o=r*e,a=0;a<t;a++)this.data[o+a]=this.data[o+a],this.data[o+e-1-a]=this.data[o+a]}},function(e,t,n){"use strict";e.exports=function(){for(var e=this.width,t=this.height,n=t>>1,r=0;r<n;r++)for(var o=r*e,a=0;a<e;a++)this.data[(t-1-r)*e+a]=this.data[o+a]=this.data[o+a]}},function(e,t,n){"use strict";var r=n(1),o=function(e){return 0===e&&!(0,r.isNegative)(e)};e.exports=function(e){for(var t=(e=e||{}).color||3,n=0;n<this.height;n++)for(var r=0;r<this.width;r++){var a=this.get(r,n);a>0&&a!==t&&(n-1>=0&&o(this.get(r,n-1))&&this.set(r,n-1,t),n+1<this.height&&o(this.get(r,n+1))&&this.set(r,n+1,t),r-1>=0&&o(this.get(r-1,n))&&this.set(r-1,n,t),r+1<this.width&&o(this.get(r+1,n))&&this.set(r+1,n,t))}}},function(e,t,n){"use strict";var r=n(1);e.exports=function(e){this.data=this.data.map(function(e){return(0,r.isNegative)(e)?0===e?e:-1*e:1==e?(0,r.randomInt)(0,1):e>1?(0,r.randomInt)(1,e):0})}},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(1),a=function(e){return e&&e.__esModule?e:{default:e}}(n(44));var i="pixel-sprite-generator-templates",l=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.templates={},this.reset(),this.deserialize(localStorage.getItem(i))}return r(e,[{key:"reset",value:function(){for(var e in this.templates)delete this.templates[e];for(var t in a.default)this.templates[t]=a.default[t]}},{key:"add",value:function(e,t){this.templates[e]=t,localStorage.setItem(i,this.serialize())}},{key:"remove",value:function(e){delete this.templates[e],localStorage.setItem(i,this.serialize())}},{key:"serialize",value:function(){return JSON.stringify(this.templates,function(e,t){return 0===t&&(0,o.isNegative)(t)?"-0":t})}},{key:"deserialize",value:function(e){var t=this;if(e)try{var n=JSON.parse(e,function(e,t){return"-0"===t?-0:t});Object.keys(n).map(function(e){return t.templates[e]=n[e]})}catch(e){console.error(e)}}}]),e}();e.exports=l},function(e,t,n){"use strict";e.exports={helmet:{width:15,height:11,data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,1,1,0,0,0,0,0,0,0,0,0,2,1,1,2,1,1,2,0,0,0,0,0,0,0,0,2,-2,-2,-2,-2,-2,2,0,0,0,0,0,0,0,1,2,0,0,1,0,0,2,1,0,0,0,0,0,1,2,2,1,2,2,2,1,2,2,1,0,0,0,1,1,2,1,2,1,2,1,2,1,2,1,1,0,0,1,0,0,1,2,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],options:{outline:!0,mirrorX:!0,mirrorY:!1,zoom:5}},robot:{width:9,height:13,data:[0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,2,2,2,2,2,1,0,0,0,1,2,2,2,1,0,0,1,0,0,1,2,1,0,0,1,1,1,1,2,2,2,1,1,1,0,1,1,2,2,2,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,2,0,0,0,0,1,2,2,0,2,2,1,0,0,2,0,0,0,0,0,2,0,0,2,0,0,0,0,0,2,0,1,2,1,0,0,0,1,2,1],options:{outline:!1,mirrorX:!0,mirrorY:!1,zoom:7}},"alien alphabet":{width:6,height:7,data:[0,0,0,0,0,0,0,-1,1,1,1,0,0,1,0,2,1,0,0,1,1,1,-1,0,0,1,2,0,2,0,0,-1,1,1,1,0,0,0,0,0,0,0],options:{outline:!1,mirrorX:!1,mirrorY:!1,zoom:6,padding:0,foregroundColor:"#225511",detailsColor:"#112211"}},spaceship:{width:12,height:12,data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,-1,-1,1,0,0,0,0,0,0,0,1,1,-1,-1,1,1,0,0,0,0,0,0,1,1,-1,-1,1,1,0,0,0,0,0,1,1,1,-1,-1,1,1,1,0,0,0,1,1,1,2,2,2,2,1,1,1,0,0,1,1,1,2,2,2,2,1,1,1,0,0,1,1,1,2,2,2,2,1,1,1,0,0,1,1,1,1,-1,-1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],options:{outline:!0,mirrorX:!0,mirrorY:!1}},humanoid:{width:15,height:17,data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,1,0,0,0,0,0,0,0,0,2,1,2,2,2,1,2,0,0,0,0,0,0,0,0,2,0,2,2,2,0,2,0,0,0,0,0,0,0,0,2,0,1,2,1,0,2,0,0,0,0,0,0,0,0,2,0,1,2,1,0,2,0,0,0,0,0,0,0,0,1,0,2,2,2,0,1,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,1,2,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],options:{outline:!0,mirrorX:!0,mirrorY:!1}},alien:{width:15,height:19,data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,2,2,1,2,2,1,1,0,0,0,0,0,0,1,2,1,1,1,1,1,2,1,0,0,0,0,0,0,0,0,2,1,0,1,2,0,0,0,0,0,0,0,0,1,0,0,2,1,2,0,0,1,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,0,0,2,1,2,2,1,2,2,1,2,0,0,0,0,0,2,1,0,1,2,1,2,1,0,1,2,0,0,0,1,2,0,0,1,2,2,2,1,0,0,2,1,0,0,2,0,0,0,1,2,2,2,1,0,0,0,2,0,0,2,0,0,0,2,1,2,1,2,0,0,0,2,0,0,2,0,0,0,2,1,0,1,2,0,0,0,2,0,1,0,1,0,0,2,0,0,0,2,0,0,1,0,1,0,0,0,0,2,1,0,0,0,1,2,0,0,0,0,0,0,0,0,2,1,0,0,0,1,2,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,1,2,0,0,0,0,0,2,1,0,0,0,0,0,1,2,1,0,0,0,0,0,1,2,1,0,0],options:{outline:!0,mirrorX:!0,mirrorY:!1}},mecha:{width:16,height:14,data:[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,2,-1,-1,2,1,1,0,0,0,0,0,0,0,0,1,-1,2,-1,-1,2,-1,1,0,0,0,0,0,0,0,0,0,0,2,-1,-1,2,0,0,0,0,0,0,0,0,1,1,1,1,2,-1,-1,2,1,1,1,1,0,0,0,1,1,2,2,1,2,-1,-1,2,1,2,2,1,1,0,0,0,1,1,0,1,1,2,2,1,1,0,1,1,0,0,0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,1,1,1,-2,-2,1,1,1,0,0,0,0,0,0,0,0,-1,1,0,0,0,0,1,-1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,1,2,1,0,0,0,0,1,2,1,0,0,0,0,0,0,1,2,1,0,0,0,0,1,2,1,0,0,0,0,0,0,-1,2,-2,0,0,0,0,-2,2,-1,0,0,0],options:{outline:!0,mirrorX:!0,mirrorY:!1}},castles:{width:15,height:18,data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,1,0,0,0,0,0,0,0,0,0,0,0,0,-2,2,-2,0,0,0,0,0,0,0,0,0,0,0,0,-2,1,-2,0,0,0,0,0,0,0,0,0,0,1,0,-2,2,-2,0,0,0,0,0,0,0,0,1,0,2,0,-2,1,-2,0,1,0,0,0,0,0,0,1,0,2,0,-2,2,-2,0,1,0,1,0,0,0,0,2,0,2,1,-2,0,-2,1,2,1,2,0,0,0,0,2,1,2,1,-2,2,-2,1,2,1,2,0,0,0,0,2,1,2,2,-2,-2,-2,2,2,1,2,0,0,0,0,2,2,2,1,1,1,1,1,2,2,2,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],options:{mirrorX:!0,mirrorY:!1,outline:!0}},houses:{width:15,height:10,data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,1,-2,-2,2,0,0,0,0,0,0,0,0,0,0,0,0,-2,2,-2,0,0,0,0,0,0,0,0,0,0,0,0,-2,1,-2,0,0,0,0,0,0,0,0,0,0,1,0,-2,2,-2,0,0,0,0,0,0,0,0,1,0,2,0,-2,1,-2,0,1,0,0,0,0,0],options:{mirrorX:!0,mirrorY:!1,outline:!0}}}},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.width=t,this.height=n,this.data=r||new Array(this.width*this.height).fill(0)}return r(e,[{key:"get",value:function(e,t){return this.data[(t*this.width+e)%this.data.length]}},{key:"set",value:function(e,t,n){this.data[(t*this.width+e)%this.data.length]=n}},{key:"transform",value:function(e){return e.call(this)}},{key:"reset",value:function(e){this.data.fill(e||0,0)}},{key:"clone",value:function(){return new e(this.width,this.height,[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(this.data)))}}]),e}();e.exports=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var a=o.default.forwardRef(function(e,t){var n=e.className,a=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["className"]);return o.default.createElement("canvas",r({className:n+" is-fullview"},a,{ref:t}))});t.default=a},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=n(48),a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),t=t||{},this.rows=t.rows||1,this.cols=t.cols||1,this.padding=t.padding||0,this.backgroundColor=t.backgroundColor,this.renderer=new o(t),this.canvas=document.createElement("canvas")}return r(e,[{key:"render",value:function(e){for(var t=this.rows,n=this.cols,r=!0,o=0;o<t;o++)for(var a=0;a<n;a++)this.renderer.render(e),r&&(r=!1,this.canvas.width=n*(this.renderer.canvas.width+2*this.padding),this.canvas.height=t*(this.renderer.canvas.height+2*this.padding),this.ctx=this.canvas.getContext("2d"),this.ctx.fillStyle=this.backgroundColor,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)),this.ctx.drawImage(this.renderer.canvas,a*(this.renderer.canvas.width+2*this.padding)+this.padding,o*(this.renderer.canvas.height+2*this.padding)+this.padding,this.renderer.canvas.width,this.renderer.canvas.height);return this}}]),e}();e.exports=a},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),t=t||{},this.pallette=t.pallette,this.pixelSize=t.pixelSize||10,this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d")}return r(e,[{key:"render",value:function(e){var t=e.run();this.canvas.width=t.width*this.pixelSize,this.canvas.height=t.height*this.pixelSize,this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);for(var n=0;n<t.height;n++)for(var r=0;r<t.width;r++){var o=t.get(r,n),a=this.pallette[o];a&&(this.ctx.fillStyle=a,this.ctx.fillRect(r*this.pixelSize,n*this.pixelSize,this.pixelSize,this.pixelSize))}return this}}]),e}();e.exports=o}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,